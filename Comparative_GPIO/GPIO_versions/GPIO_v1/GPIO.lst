
GPIO.elf: formato do arquivo elf32-avr

Seções:
Idx Tamanho do Nome do Arquivo VMA LMA sem Algn
  0 .data         00000000  00800200  00000dea  00000e7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800200  00800200  00000e7e  2**0
                  ALLOC
  3 .stab         00002850  00000000  00000000  00000e80  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001180  00000000  00000000  000036d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00004850  2**0
                  CONTENTS, READONLY

Desmontagem da seção .text:

00000000 <__vectors>:
   0:	9d c0       	rjmp	.+314    	; 0x13c <__dtors_end>
   2:	00 00       	nop
   4:	bc c0       	rjmp	.+376    	; 0x17e <__bad_interrupt>
   6:	00 00       	nop
   8:	ba c0       	rjmp	.+372    	; 0x17e <__bad_interrupt>
   a:	00 00       	nop
   c:	b8 c0       	rjmp	.+368    	; 0x17e <__bad_interrupt>
   e:	00 00       	nop
  10:	b6 c0       	rjmp	.+364    	; 0x17e <__bad_interrupt>
  12:	00 00       	nop
  14:	b4 c0       	rjmp	.+360    	; 0x17e <__bad_interrupt>
  16:	00 00       	nop
  18:	b2 c0       	rjmp	.+356    	; 0x17e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	b0 c0       	rjmp	.+352    	; 0x17e <__bad_interrupt>
  1e:	00 00       	nop
  20:	ae c0       	rjmp	.+348    	; 0x17e <__bad_interrupt>
  22:	00 00       	nop
  24:	ac c0       	rjmp	.+344    	; 0x17e <__bad_interrupt>
  26:	00 00       	nop
  28:	aa c0       	rjmp	.+340    	; 0x17e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	a8 c0       	rjmp	.+336    	; 0x17e <__bad_interrupt>
  2e:	00 00       	nop
  30:	a6 c0       	rjmp	.+332    	; 0x17e <__bad_interrupt>
  32:	00 00       	nop
  34:	a4 c0       	rjmp	.+328    	; 0x17e <__bad_interrupt>
  36:	00 00       	nop
  38:	a2 c0       	rjmp	.+324    	; 0x17e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	a0 c0       	rjmp	.+320    	; 0x17e <__bad_interrupt>
  3e:	00 00       	nop
  40:	9e c0       	rjmp	.+316    	; 0x17e <__bad_interrupt>
  42:	00 00       	nop
  44:	9c c0       	rjmp	.+312    	; 0x17e <__bad_interrupt>
  46:	00 00       	nop
  48:	9a c0       	rjmp	.+308    	; 0x17e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	98 c0       	rjmp	.+304    	; 0x17e <__bad_interrupt>
  4e:	00 00       	nop
  50:	96 c0       	rjmp	.+300    	; 0x17e <__bad_interrupt>
  52:	00 00       	nop
  54:	94 c0       	rjmp	.+296    	; 0x17e <__bad_interrupt>
  56:	00 00       	nop
  58:	92 c0       	rjmp	.+292    	; 0x17e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	90 c0       	rjmp	.+288    	; 0x17e <__bad_interrupt>
  5e:	00 00       	nop
  60:	8e c0       	rjmp	.+284    	; 0x17e <__bad_interrupt>
  62:	00 00       	nop
  64:	8c c0       	rjmp	.+280    	; 0x17e <__bad_interrupt>
  66:	00 00       	nop
  68:	8a c0       	rjmp	.+276    	; 0x17e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	88 c0       	rjmp	.+272    	; 0x17e <__bad_interrupt>
  6e:	00 00       	nop
  70:	86 c0       	rjmp	.+268    	; 0x17e <__bad_interrupt>
  72:	00 00       	nop
  74:	84 c0       	rjmp	.+264    	; 0x17e <__bad_interrupt>
  76:	00 00       	nop
  78:	82 c0       	rjmp	.+260    	; 0x17e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	80 c0       	rjmp	.+256    	; 0x17e <__bad_interrupt>
  7e:	00 00       	nop
  80:	7e c0       	rjmp	.+252    	; 0x17e <__bad_interrupt>
  82:	00 00       	nop
  84:	7c c0       	rjmp	.+248    	; 0x17e <__bad_interrupt>
  86:	00 00       	nop
  88:	7a c0       	rjmp	.+244    	; 0x17e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	78 c0       	rjmp	.+240    	; 0x17e <__bad_interrupt>
  8e:	00 00       	nop
  90:	76 c0       	rjmp	.+236    	; 0x17e <__bad_interrupt>
  92:	00 00       	nop
  94:	74 c0       	rjmp	.+232    	; 0x17e <__bad_interrupt>
  96:	00 00       	nop
  98:	72 c0       	rjmp	.+228    	; 0x17e <__bad_interrupt>
  9a:	00 00       	nop
  9c:	70 c0       	rjmp	.+224    	; 0x17e <__bad_interrupt>
  9e:	00 00       	nop
  a0:	6e c0       	rjmp	.+220    	; 0x17e <__bad_interrupt>
  a2:	00 00       	nop
  a4:	6c c0       	rjmp	.+216    	; 0x17e <__bad_interrupt>
  a6:	00 00       	nop
  a8:	6a c0       	rjmp	.+212    	; 0x17e <__bad_interrupt>
  aa:	00 00       	nop
  ac:	68 c0       	rjmp	.+208    	; 0x17e <__bad_interrupt>
  ae:	00 00       	nop
  b0:	66 c0       	rjmp	.+204    	; 0x17e <__bad_interrupt>
  b2:	00 00       	nop
  b4:	64 c0       	rjmp	.+200    	; 0x17e <__bad_interrupt>
  b6:	00 00       	nop
  b8:	62 c0       	rjmp	.+196    	; 0x17e <__bad_interrupt>
  ba:	00 00       	nop
  bc:	60 c0       	rjmp	.+192    	; 0x17e <__bad_interrupt>
  be:	00 00       	nop
  c0:	5e c0       	rjmp	.+188    	; 0x17e <__bad_interrupt>
  c2:	00 00       	nop
  c4:	5c c0       	rjmp	.+184    	; 0x17e <__bad_interrupt>
  c6:	00 00       	nop
  c8:	5a c0       	rjmp	.+180    	; 0x17e <__bad_interrupt>
  ca:	00 00       	nop
  cc:	58 c0       	rjmp	.+176    	; 0x17e <__bad_interrupt>
  ce:	00 00       	nop
  d0:	56 c0       	rjmp	.+172    	; 0x17e <__bad_interrupt>
  d2:	00 00       	nop
  d4:	54 c0       	rjmp	.+168    	; 0x17e <__bad_interrupt>
  d6:	00 00       	nop
  d8:	52 c0       	rjmp	.+164    	; 0x17e <__bad_interrupt>
  da:	00 00       	nop
  dc:	50 c0       	rjmp	.+160    	; 0x17e <__bad_interrupt>
  de:	00 00       	nop
  e0:	4e c0       	rjmp	.+156    	; 0x17e <__bad_interrupt>
  e2:	00 00       	nop
  e4:	e7 00       	.word	0x00e7	; ????
  e6:	e7 00       	.word	0x00e7	; ????
  e8:	22 01       	movw	r4, r4
  ea:	22 01       	movw	r4, r4
  ec:	5f 01       	movw	r10, r30
  ee:	9a 01       	movw	r18, r20
  f0:	d5 01       	movw	r26, r10
  f2:	d5 01       	movw	r26, r10
  f4:	d5 01       	movw	r26, r10
  f6:	d5 01       	movw	r26, r10
  f8:	12 02       	muls	r17, r18
  fa:	12 02       	muls	r17, r18
  fc:	12 02       	muls	r17, r18
  fe:	12 02       	muls	r17, r18
 100:	83 02       	muls	r24, r19
 102:	83 02       	muls	r24, r19
 104:	83 02       	muls	r24, r19
 106:	83 02       	muls	r24, r19
 108:	b9 02       	muls	r27, r25
 10a:	83 02       	muls	r24, r19
 10c:	ef 02       	muls	r30, r31
 10e:	ef 02       	muls	r30, r31
 110:	ef 02       	muls	r30, r31
 112:	ef 02       	muls	r30, r31
 114:	25 03       	mulsu	r18, r21
 116:	25 03       	mulsu	r18, r21
 118:	25 03       	mulsu	r18, r21
 11a:	25 03       	mulsu	r18, r21
 11c:	92 03       	fmuls	r17, r18
 11e:	92 03       	fmuls	r17, r18
 120:	92 03       	fmuls	r17, r18
 122:	92 03       	fmuls	r17, r18
 124:	a5 03       	fmuls	r18, r21
 126:	92 03       	fmuls	r17, r18
 128:	b8 03       	fmulsu	r19, r16
 12a:	b8 03       	fmulsu	r19, r16
 12c:	b8 03       	fmulsu	r19, r16
 12e:	b8 03       	fmulsu	r19, r16
 130:	cb 03       	fmulsu	r20, r19
 132:	cb 03       	fmulsu	r20, r19
 134:	cb 03       	fmulsu	r20, r19
 136:	cb 03       	fmulsu	r20, r19

00000138 <__ctors_start>:
 138:	b6 05       	cpc	r27, r6

0000013a <__ctors_end>:
 13a:	c2 05       	cpc	r28, r2

0000013c <__dtors_end>:
 13c:	11 24       	eor	r1, r1
 13e:	1f be       	out	0x3f, r1	; 63
 140:	cf ef       	ldi	r28, 0xFF	; 255
 142:	d1 e2       	ldi	r29, 0x21	; 33
 144:	de bf       	out	0x3e, r29	; 62
 146:	cd bf       	out	0x3d, r28	; 61
 148:	00 e0       	ldi	r16, 0x00	; 0
 14a:	0c bf       	out	0x3c, r16	; 60

0000014c <__do_clear_bss>:
 14c:	12 e0       	ldi	r17, 0x02	; 2
 14e:	a0 e0       	ldi	r26, 0x00	; 0
 150:	b2 e0       	ldi	r27, 0x02	; 2
 152:	01 c0       	rjmp	.+2      	; 0x156 <.do_clear_bss_start>

00000154 <.do_clear_bss_loop>:
 154:	1d 92       	st	X+, r1

00000156 <.do_clear_bss_start>:
 156:	aa 30       	cpi	r26, 0x0A	; 10
 158:	b1 07       	cpc	r27, r17
 15a:	e1 f7       	brne	.-8      	; 0x154 <.do_clear_bss_loop>

0000015c <__do_global_ctors>:
 15c:	11 e0       	ldi	r17, 0x01	; 1
 15e:	ca e3       	ldi	r28, 0x3A	; 58
 160:	d1 e0       	ldi	r29, 0x01	; 1
 162:	00 e0       	ldi	r16, 0x00	; 0
 164:	05 c0       	rjmp	.+10     	; 0x170 <__do_global_ctors+0x14>
 166:	22 97       	sbiw	r28, 0x02	; 2
 168:	01 09       	sbc	r16, r1
 16a:	fe 01       	movw	r30, r28
 16c:	0b bf       	out	0x3b, r16	; 59
 16e:	1c d5       	rcall	.+2616   	; 0xba8 <__tablejump_elpm__>
 170:	c8 33       	cpi	r28, 0x38	; 56
 172:	d1 07       	cpc	r29, r17
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	08 07       	cpc	r16, r24
 178:	b1 f7       	brne	.-20     	; 0x166 <__do_global_ctors+0xa>
 17a:	25 d3       	rcall	.+1610   	; 0x7c6 <main>
 17c:	25 c6       	rjmp	.+3146   	; 0xdc8 <__do_global_dtors>

0000017e <__bad_interrupt>:
 17e:	40 cf       	rjmp	.-384    	; 0x0 <__vectors>

00000180 <_ZN4GPIOC1EhNS_15PortDirection_tE>:
 */

#include <avr/io.h>
#include "GPIO.h"

GPIO::GPIO(uint8_t id, PortDirection_t dir):
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	00 d0       	rcall	.+0      	; 0x186 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x6>
 186:	1f 92       	push	r1
 188:	cd b7       	in	r28, 0x3d	; 61
 18a:	de b7       	in	r29, 0x3e	; 62
 18c:	9a 83       	std	Y+2, r25	; 0x02
 18e:	89 83       	std	Y+1, r24	; 0x01
 190:	6b 83       	std	Y+3, r22	; 0x03
 192:	4c 83       	std	Y+4, r20	; 0x04
_id(id)
 194:	89 81       	ldd	r24, Y+1	; 0x01
 196:	9a 81       	ldd	r25, Y+2	; 0x02
 198:	2b 81       	ldd	r18, Y+3	; 0x03
 19a:	fc 01       	movw	r30, r24
 19c:	21 83       	std	Z+1, r18	; 0x01
{
	switch (_id) {
 19e:	89 81       	ldd	r24, Y+1	; 0x01
 1a0:	9a 81       	ldd	r25, Y+2	; 0x02
 1a2:	fc 01       	movw	r30, r24
 1a4:	81 81       	ldd	r24, Z+1	; 0x01
 1a6:	88 2f       	mov	r24, r24
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	aa 27       	eor	r26, r26
 1ac:	97 fd       	sbrc	r25, 7
 1ae:	a0 95       	com	r26
 1b0:	ba 2f       	mov	r27, r26
 1b2:	40 e0       	ldi	r20, 0x00	; 0
 1b4:	50 e0       	ldi	r21, 0x00	; 0
 1b6:	2d e0       	ldi	r18, 0x0D	; 13
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	84 1b       	sub	r24, r20
 1bc:	95 0b       	sbc	r25, r21
 1be:	28 17       	cp	r18, r24
 1c0:	39 07       	cpc	r19, r25
 1c2:	08 f4       	brcc	.+2      	; 0x1c6 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x46>
 1c4:	6c c1       	rjmp	.+728    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
 1c6:	8e 58       	subi	r24, 0x8E	; 142
 1c8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ca:	fc 01       	movw	r30, r24
 1cc:	e7 c4       	rjmp	.+2510   	; 0xb9c <__tablejump2__>
 1ce:	89 81       	ldd	r24, Y+1	; 0x01
	case 0:
	case 1:
		_bit = id;
 1d0:	9a 81       	ldd	r25, Y+2	; 0x02
 1d2:	2b 81       	ldd	r18, Y+3	; 0x03
 1d4:	fc 01       	movw	r30, r24
 1d6:	20 83       	st	Z, r18
 1d8:	8c 81       	ldd	r24, Y+4	; 0x04
		if (dir)
 1da:	88 23       	and	r24, r24
 1dc:	c9 f0       	breq	.+50     	; 0x210 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x90>
 1de:	8d e2       	ldi	r24, 0x2D	; 45
			DDRE |= (1 << _bit);
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	2d e2       	ldi	r18, 0x2D	; 45
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	f9 01       	movw	r30, r18
 1e8:	20 81       	ld	r18, Z
 1ea:	62 2f       	mov	r22, r18
 1ec:	29 81       	ldd	r18, Y+1	; 0x01
 1ee:	3a 81       	ldd	r19, Y+2	; 0x02
 1f0:	f9 01       	movw	r30, r18
 1f2:	20 81       	ld	r18, Z
 1f4:	42 2f       	mov	r20, r18
 1f6:	50 e0       	ldi	r21, 0x00	; 0
 1f8:	21 e0       	ldi	r18, 0x01	; 1
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	04 2e       	mov	r0, r20
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x84>
 200:	22 0f       	add	r18, r18
 202:	33 1f       	adc	r19, r19
 204:	0a 94       	dec	r0
 206:	e2 f7       	brpl	.-8      	; 0x200 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x80>
 208:	26 2b       	or	r18, r22
 20a:	fc 01       	movw	r30, r24
 20c:	20 83       	st	Z, r18
 20e:	47 c1       	rjmp	.+654    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		else
			DDRE &= ~(1 << _bit);
		break;
 210:	8d e2       	ldi	r24, 0x2D	; 45
	case 1:
		_bit = id;
		if (dir)
			DDRE |= (1 << _bit);
		else
			DDRE &= ~(1 << _bit);
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	2d e2       	ldi	r18, 0x2D	; 45
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	f9 01       	movw	r30, r18
 21a:	20 81       	ld	r18, Z
 21c:	62 2f       	mov	r22, r18
 21e:	29 81       	ldd	r18, Y+1	; 0x01
 220:	3a 81       	ldd	r19, Y+2	; 0x02
 222:	f9 01       	movw	r30, r18
 224:	20 81       	ld	r18, Z
 226:	42 2f       	mov	r20, r18
 228:	50 e0       	ldi	r21, 0x00	; 0
 22a:	21 e0       	ldi	r18, 0x01	; 1
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	04 2e       	mov	r0, r20
 230:	02 c0       	rjmp	.+4      	; 0x236 <_ZN4GPIOC1EhNS_15PortDirection_tE+0xb6>
 232:	22 0f       	add	r18, r18
 234:	33 1f       	adc	r19, r19
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <_ZN4GPIOC1EhNS_15PortDirection_tE+0xb2>
 23a:	20 95       	com	r18
 23c:	26 23       	and	r18, r22
 23e:	fc 01       	movw	r30, r24
 240:	20 83       	st	Z, r18
 242:	2d c1       	rjmp	.+602    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		break;
 244:	8b 81       	ldd	r24, Y+3	; 0x03

	case 2:
	case 3:
		_bit = id + 2;
 246:	22 e0       	ldi	r18, 0x02	; 2
 248:	28 0f       	add	r18, r24
 24a:	89 81       	ldd	r24, Y+1	; 0x01
 24c:	9a 81       	ldd	r25, Y+2	; 0x02
 24e:	fc 01       	movw	r30, r24
 250:	20 83       	st	Z, r18
 252:	8c 81       	ldd	r24, Y+4	; 0x04
		if (dir)
 254:	88 23       	and	r24, r24
 256:	c9 f0       	breq	.+50     	; 0x28a <_ZN4GPIOC1EhNS_15PortDirection_tE+0x10a>
 258:	8d e2       	ldi	r24, 0x2D	; 45
			DDRE |= (1 << _bit);
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	2d e2       	ldi	r18, 0x2D	; 45
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	f9 01       	movw	r30, r18
 262:	20 81       	ld	r18, Z
 264:	62 2f       	mov	r22, r18
 266:	29 81       	ldd	r18, Y+1	; 0x01
 268:	3a 81       	ldd	r19, Y+2	; 0x02
 26a:	f9 01       	movw	r30, r18
 26c:	20 81       	ld	r18, Z
 26e:	42 2f       	mov	r20, r18
 270:	50 e0       	ldi	r21, 0x00	; 0
 272:	21 e0       	ldi	r18, 0x01	; 1
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	04 2e       	mov	r0, r20
 278:	02 c0       	rjmp	.+4      	; 0x27e <_ZN4GPIOC1EhNS_15PortDirection_tE+0xfe>
 27a:	22 0f       	add	r18, r18
 27c:	33 1f       	adc	r19, r19
 27e:	0a 94       	dec	r0
 280:	e2 f7       	brpl	.-8      	; 0x27a <_ZN4GPIOC1EhNS_15PortDirection_tE+0xfa>
 282:	26 2b       	or	r18, r22
 284:	fc 01       	movw	r30, r24
 286:	20 83       	st	Z, r18
 288:	0a c1       	rjmp	.+532    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		else
			DDRE &= ~(1 << _bit);
		break;
 28a:	8d e2       	ldi	r24, 0x2D	; 45
	case 3:
		_bit = id + 2;
		if (dir)
			DDRE |= (1 << _bit);
		else
			DDRE &= ~(1 << _bit);
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	2d e2       	ldi	r18, 0x2D	; 45
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	f9 01       	movw	r30, r18
 294:	20 81       	ld	r18, Z
 296:	62 2f       	mov	r22, r18
 298:	29 81       	ldd	r18, Y+1	; 0x01
 29a:	3a 81       	ldd	r19, Y+2	; 0x02
 29c:	f9 01       	movw	r30, r18
 29e:	20 81       	ld	r18, Z
 2a0:	42 2f       	mov	r20, r18
 2a2:	50 e0       	ldi	r21, 0x00	; 0
 2a4:	21 e0       	ldi	r18, 0x01	; 1
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	04 2e       	mov	r0, r20
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x130>
 2ac:	22 0f       	add	r18, r18
 2ae:	33 1f       	adc	r19, r19
 2b0:	0a 94       	dec	r0
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <_ZN4GPIOC1EhNS_15PortDirection_tE+0x12c>
 2b4:	20 95       	com	r18
 2b6:	26 23       	and	r18, r22
 2b8:	fc 01       	movw	r30, r24
 2ba:	20 83       	st	Z, r18
 2bc:	f0 c0       	rjmp	.+480    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		break;
 2be:	89 81       	ldd	r24, Y+1	; 0x01

	case 4:
		_bit = DDG5;
 2c0:	9a 81       	ldd	r25, Y+2	; 0x02
 2c2:	25 e0       	ldi	r18, 0x05	; 5
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 83       	st	Z, r18
 2c8:	8c 81       	ldd	r24, Y+4	; 0x04
		if (dir)
 2ca:	88 23       	and	r24, r24
 2cc:	c9 f0       	breq	.+50     	; 0x300 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x180>
 2ce:	83 e3       	ldi	r24, 0x33	; 51
			DDRG |= (1 << _bit);
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	23 e3       	ldi	r18, 0x33	; 51
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	f9 01       	movw	r30, r18
 2d8:	20 81       	ld	r18, Z
 2da:	62 2f       	mov	r22, r18
 2dc:	29 81       	ldd	r18, Y+1	; 0x01
 2de:	3a 81       	ldd	r19, Y+2	; 0x02
 2e0:	f9 01       	movw	r30, r18
 2e2:	20 81       	ld	r18, Z
 2e4:	42 2f       	mov	r20, r18
 2e6:	50 e0       	ldi	r21, 0x00	; 0
 2e8:	21 e0       	ldi	r18, 0x01	; 1
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	04 2e       	mov	r0, r20
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x174>
 2f0:	22 0f       	add	r18, r18
 2f2:	33 1f       	adc	r19, r19
 2f4:	0a 94       	dec	r0
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x170>
 2f8:	26 2b       	or	r18, r22
 2fa:	fc 01       	movw	r30, r24
 2fc:	20 83       	st	Z, r18
 2fe:	cf c0       	rjmp	.+414    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		else
			DDRG &= ~(1 << _bit);
		break;
 300:	83 e3       	ldi	r24, 0x33	; 51
	case 4:
		_bit = DDG5;
		if (dir)
			DDRG |= (1 << _bit);
		else
			DDRG &= ~(1 << _bit);
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	23 e3       	ldi	r18, 0x33	; 51
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	f9 01       	movw	r30, r18
 30a:	20 81       	ld	r18, Z
 30c:	62 2f       	mov	r22, r18
 30e:	29 81       	ldd	r18, Y+1	; 0x01
 310:	3a 81       	ldd	r19, Y+2	; 0x02
 312:	f9 01       	movw	r30, r18
 314:	20 81       	ld	r18, Z
 316:	42 2f       	mov	r20, r18
 318:	50 e0       	ldi	r21, 0x00	; 0
 31a:	21 e0       	ldi	r18, 0x01	; 1
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	04 2e       	mov	r0, r20
 320:	02 c0       	rjmp	.+4      	; 0x326 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1a6>
 322:	22 0f       	add	r18, r18
 324:	33 1f       	adc	r19, r19
 326:	0a 94       	dec	r0
 328:	e2 f7       	brpl	.-8      	; 0x322 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1a2>
 32a:	20 95       	com	r18
 32c:	26 23       	and	r18, r22
 32e:	fc 01       	movw	r30, r24
 330:	20 83       	st	Z, r18
 332:	b5 c0       	rjmp	.+362    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		break;
 334:	89 81       	ldd	r24, Y+1	; 0x01

	case 5:
		_bit = DDE3;
 336:	9a 81       	ldd	r25, Y+2	; 0x02
 338:	23 e0       	ldi	r18, 0x03	; 3
 33a:	fc 01       	movw	r30, r24
 33c:	20 83       	st	Z, r18
 33e:	8c 81       	ldd	r24, Y+4	; 0x04
		if (dir)
 340:	88 23       	and	r24, r24
 342:	c9 f0       	breq	.+50     	; 0x376 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1f6>
 344:	8d e2       	ldi	r24, 0x2D	; 45
			DDRE |= (1 << _bit);
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	2d e2       	ldi	r18, 0x2D	; 45
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	f9 01       	movw	r30, r18
 34e:	20 81       	ld	r18, Z
 350:	62 2f       	mov	r22, r18
 352:	29 81       	ldd	r18, Y+1	; 0x01
 354:	3a 81       	ldd	r19, Y+2	; 0x02
 356:	f9 01       	movw	r30, r18
 358:	20 81       	ld	r18, Z
 35a:	42 2f       	mov	r20, r18
 35c:	50 e0       	ldi	r21, 0x00	; 0
 35e:	21 e0       	ldi	r18, 0x01	; 1
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	04 2e       	mov	r0, r20
 364:	02 c0       	rjmp	.+4      	; 0x36a <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1ea>
 366:	22 0f       	add	r18, r18
 368:	33 1f       	adc	r19, r19
 36a:	0a 94       	dec	r0
 36c:	e2 f7       	brpl	.-8      	; 0x366 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x1e6>
 36e:	26 2b       	or	r18, r22
 370:	fc 01       	movw	r30, r24
 372:	20 83       	st	Z, r18
 374:	94 c0       	rjmp	.+296    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		else
			DDRE &= ~(1 << _bit);
		break;
 376:	8d e2       	ldi	r24, 0x2D	; 45
	case 5:
		_bit = DDE3;
		if (dir)
			DDRE |= (1 << _bit);
		else
			DDRE &= ~(1 << _bit);
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	2d e2       	ldi	r18, 0x2D	; 45
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	f9 01       	movw	r30, r18
 380:	20 81       	ld	r18, Z
 382:	62 2f       	mov	r22, r18
 384:	29 81       	ldd	r18, Y+1	; 0x01
 386:	3a 81       	ldd	r19, Y+2	; 0x02
 388:	f9 01       	movw	r30, r18
 38a:	20 81       	ld	r18, Z
 38c:	42 2f       	mov	r20, r18
 38e:	50 e0       	ldi	r21, 0x00	; 0
 390:	21 e0       	ldi	r18, 0x01	; 1
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	04 2e       	mov	r0, r20
 396:	02 c0       	rjmp	.+4      	; 0x39c <_ZN4GPIOC1EhNS_15PortDirection_tE+0x21c>
 398:	22 0f       	add	r18, r18
 39a:	33 1f       	adc	r19, r19
 39c:	0a 94       	dec	r0
 39e:	e2 f7       	brpl	.-8      	; 0x398 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x218>
 3a0:	20 95       	com	r18
 3a2:	26 23       	and	r18, r22
 3a4:	fc 01       	movw	r30, r24
 3a6:	20 83       	st	Z, r18
 3a8:	7a c0       	rjmp	.+244    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		break;
 3aa:	8b 81       	ldd	r24, Y+3	; 0x03

	case 6:
	case 7:
	case 8:
	case 9:
		_bit = id - 3;
 3ac:	2d ef       	ldi	r18, 0xFD	; 253
 3ae:	28 0f       	add	r18, r24
 3b0:	89 81       	ldd	r24, Y+1	; 0x01
 3b2:	9a 81       	ldd	r25, Y+2	; 0x02
 3b4:	fc 01       	movw	r30, r24
 3b6:	20 83       	st	Z, r18
 3b8:	8c 81       	ldd	r24, Y+4	; 0x04
		if (dir)
 3ba:	88 23       	and	r24, r24
 3bc:	c9 f0       	breq	.+50     	; 0x3f0 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x270>
 3be:	81 e0       	ldi	r24, 0x01	; 1
			DDRH |= (1 << _bit);
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	21 e0       	ldi	r18, 0x01	; 1
 3c4:	31 e0       	ldi	r19, 0x01	; 1
 3c6:	f9 01       	movw	r30, r18
 3c8:	20 81       	ld	r18, Z
 3ca:	62 2f       	mov	r22, r18
 3cc:	29 81       	ldd	r18, Y+1	; 0x01
 3ce:	3a 81       	ldd	r19, Y+2	; 0x02
 3d0:	f9 01       	movw	r30, r18
 3d2:	20 81       	ld	r18, Z
 3d4:	42 2f       	mov	r20, r18
 3d6:	50 e0       	ldi	r21, 0x00	; 0
 3d8:	21 e0       	ldi	r18, 0x01	; 1
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	04 2e       	mov	r0, r20
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x264>
 3e0:	22 0f       	add	r18, r18
 3e2:	33 1f       	adc	r19, r19
 3e4:	0a 94       	dec	r0
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x260>
 3e8:	26 2b       	or	r18, r22
 3ea:	fc 01       	movw	r30, r24
 3ec:	20 83       	st	Z, r18
 3ee:	57 c0       	rjmp	.+174    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		else
			DDRH &= ~(1 << _bit);
		break;
 3f0:	81 e0       	ldi	r24, 0x01	; 1
	case 9:
		_bit = id - 3;
		if (dir)
			DDRH |= (1 << _bit);
		else
			DDRH &= ~(1 << _bit);
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	21 e0       	ldi	r18, 0x01	; 1
 3f6:	31 e0       	ldi	r19, 0x01	; 1
 3f8:	f9 01       	movw	r30, r18
 3fa:	20 81       	ld	r18, Z
 3fc:	62 2f       	mov	r22, r18
 3fe:	29 81       	ldd	r18, Y+1	; 0x01
 400:	3a 81       	ldd	r19, Y+2	; 0x02
 402:	f9 01       	movw	r30, r18
 404:	20 81       	ld	r18, Z
 406:	42 2f       	mov	r20, r18
 408:	50 e0       	ldi	r21, 0x00	; 0
 40a:	21 e0       	ldi	r18, 0x01	; 1
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	04 2e       	mov	r0, r20
 410:	02 c0       	rjmp	.+4      	; 0x416 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x296>
 412:	22 0f       	add	r18, r18
 414:	33 1f       	adc	r19, r19
 416:	0a 94       	dec	r0
 418:	e2 f7       	brpl	.-8      	; 0x412 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x292>
 41a:	20 95       	com	r18
 41c:	26 23       	and	r18, r22
 41e:	fc 01       	movw	r30, r24
 420:	20 83       	st	Z, r18
 422:	3d c0       	rjmp	.+122    	; 0x49e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31e>
		break;
 424:	8b 81       	ldd	r24, Y+3	; 0x03

	case 10:
	case 11:
	case 12:
	case 13:
		_bit = id - 6;
 426:	2a ef       	ldi	r18, 0xFA	; 250
 428:	28 0f       	add	r18, r24
 42a:	89 81       	ldd	r24, Y+1	; 0x01
 42c:	9a 81       	ldd	r25, Y+2	; 0x02
 42e:	fc 01       	movw	r30, r24
 430:	20 83       	st	Z, r18
 432:	8c 81       	ldd	r24, Y+4	; 0x04
		if (dir)
 434:	88 23       	and	r24, r24
 436:	c9 f0       	breq	.+50     	; 0x46a <_ZN4GPIOC1EhNS_15PortDirection_tE+0x2ea>
 438:	84 e2       	ldi	r24, 0x24	; 36
			DDRB |= (1 << _bit);
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	24 e2       	ldi	r18, 0x24	; 36
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	f9 01       	movw	r30, r18
 442:	20 81       	ld	r18, Z
 444:	62 2f       	mov	r22, r18
 446:	29 81       	ldd	r18, Y+1	; 0x01
 448:	3a 81       	ldd	r19, Y+2	; 0x02
 44a:	f9 01       	movw	r30, r18
 44c:	20 81       	ld	r18, Z
 44e:	42 2f       	mov	r20, r18
 450:	50 e0       	ldi	r21, 0x00	; 0
 452:	21 e0       	ldi	r18, 0x01	; 1
 454:	30 e0       	ldi	r19, 0x00	; 0
 456:	04 2e       	mov	r0, r20
 458:	02 c0       	rjmp	.+4      	; 0x45e <_ZN4GPIOC1EhNS_15PortDirection_tE+0x2de>
 45a:	22 0f       	add	r18, r18
 45c:	33 1f       	adc	r19, r19
 45e:	0a 94       	dec	r0
 460:	e2 f7       	brpl	.-8      	; 0x45a <_ZN4GPIOC1EhNS_15PortDirection_tE+0x2da>
 462:	26 2b       	or	r18, r22
 464:	fc 01       	movw	r30, r24
 466:	20 83       	st	Z, r18
 468:	19 c0       	rjmp	.+50     	; 0x49c <_ZN4GPIOC1EhNS_15PortDirection_tE+0x31c>
 46a:	84 e2       	ldi	r24, 0x24	; 36
		else
			DDRB &= ~(1 << _bit);
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	24 e2       	ldi	r18, 0x24	; 36
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	f9 01       	movw	r30, r18
 474:	20 81       	ld	r18, Z
 476:	62 2f       	mov	r22, r18
 478:	29 81       	ldd	r18, Y+1	; 0x01
 47a:	3a 81       	ldd	r19, Y+2	; 0x02
 47c:	f9 01       	movw	r30, r18
 47e:	20 81       	ld	r18, Z
 480:	42 2f       	mov	r20, r18
 482:	50 e0       	ldi	r21, 0x00	; 0
 484:	21 e0       	ldi	r18, 0x01	; 1
 486:	30 e0       	ldi	r19, 0x00	; 0
 488:	04 2e       	mov	r0, r20
 48a:	02 c0       	rjmp	.+4      	; 0x490 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x310>
 48c:	22 0f       	add	r18, r18
 48e:	33 1f       	adc	r19, r19
 490:	0a 94       	dec	r0
 492:	e2 f7       	brpl	.-8      	; 0x48c <_ZN4GPIOC1EhNS_15PortDirection_tE+0x30c>
 494:	20 95       	com	r18
 496:	26 23       	and	r18, r22
 498:	fc 01       	movw	r30, r24
 49a:	20 83       	st	Z, r18
 49c:	00 00       	nop
		break;
 49e:	0f 90       	pop	r0

	}

}
 4a0:	0f 90       	pop	r0
 4a2:	0f 90       	pop	r0
 4a4:	0f 90       	pop	r0
 4a6:	df 91       	pop	r29
 4a8:	cf 91       	pop	r28
 4aa:	08 95       	ret

000004ac <_ZN4GPIOD1Ev>:

GPIO::~GPIO() {}
 4ac:	cf 93       	push	r28
 4ae:	df 93       	push	r29
 4b0:	1f 92       	push	r1
 4b2:	1f 92       	push	r1
 4b4:	cd b7       	in	r28, 0x3d	; 61
 4b6:	de b7       	in	r29, 0x3e	; 62
 4b8:	9a 83       	std	Y+2, r25	; 0x02
 4ba:	89 83       	std	Y+1, r24	; 0x01
 4bc:	0f 90       	pop	r0
 4be:	0f 90       	pop	r0
 4c0:	df 91       	pop	r29
 4c2:	cf 91       	pop	r28
 4c4:	08 95       	ret

000004c6 <_ZN4GPIO3setEb>:
	case 13:
		return (bool) PINB & (1 << _bit);
	}
}

void GPIO::set(bool val) {
 4c6:	cf 93       	push	r28
 4c8:	df 93       	push	r29
 4ca:	00 d0       	rcall	.+0      	; 0x4cc <_ZN4GPIO3setEb+0x6>
 4cc:	cd b7       	in	r28, 0x3d	; 61
 4ce:	de b7       	in	r29, 0x3e	; 62
 4d0:	9a 83       	std	Y+2, r25	; 0x02
 4d2:	89 83       	std	Y+1, r24	; 0x01
 4d4:	6b 83       	std	Y+3, r22	; 0x03
	switch (_id) {
 4d6:	89 81       	ldd	r24, Y+1	; 0x01
 4d8:	9a 81       	ldd	r25, Y+2	; 0x02
 4da:	fc 01       	movw	r30, r24
 4dc:	81 81       	ldd	r24, Z+1	; 0x01
 4de:	88 2f       	mov	r24, r24
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	aa 27       	eor	r26, r26
 4e4:	97 fd       	sbrc	r25, 7
 4e6:	a0 95       	com	r26
 4e8:	ba 2f       	mov	r27, r26
 4ea:	40 e0       	ldi	r20, 0x00	; 0
 4ec:	50 e0       	ldi	r21, 0x00	; 0
 4ee:	2d e0       	ldi	r18, 0x0D	; 13
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	84 1b       	sub	r24, r20
 4f4:	95 0b       	sbc	r25, r21
 4f6:	28 17       	cp	r18, r24
 4f8:	39 07       	cpc	r19, r25
 4fa:	08 f4       	brcc	.+2      	; 0x4fe <_ZN4GPIO3setEb+0x38>
 4fc:	dc c0       	rjmp	.+440    	; 0x6b6 <_ZN4GPIO3setEb+0x1f0>
 4fe:	80 58       	subi	r24, 0x80	; 128
 500:	9f 4f       	sbci	r25, 0xFF	; 255
 502:	fc 01       	movw	r30, r24
 504:	4b c3       	rjmp	.+1686   	; 0xb9c <__tablejump2__>
 506:	8b 81       	ldd	r24, Y+3	; 0x03
	case 0:
	case 1:
	case 2:
	case 3:
	case 5:
		if (val)
 508:	88 23       	and	r24, r24
 50a:	c9 f0       	breq	.+50     	; 0x53e <_ZN4GPIO3setEb+0x78>
 50c:	8e e2       	ldi	r24, 0x2E	; 46
			PORTE |= (1 << _bit);
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	2e e2       	ldi	r18, 0x2E	; 46
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	f9 01       	movw	r30, r18
 516:	20 81       	ld	r18, Z
 518:	62 2f       	mov	r22, r18
 51a:	29 81       	ldd	r18, Y+1	; 0x01
 51c:	3a 81       	ldd	r19, Y+2	; 0x02
 51e:	f9 01       	movw	r30, r18
 520:	20 81       	ld	r18, Z
 522:	42 2f       	mov	r20, r18
 524:	50 e0       	ldi	r21, 0x00	; 0
 526:	21 e0       	ldi	r18, 0x01	; 1
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	04 2e       	mov	r0, r20
 52c:	02 c0       	rjmp	.+4      	; 0x532 <_ZN4GPIO3setEb+0x6c>
 52e:	22 0f       	add	r18, r18
 530:	33 1f       	adc	r19, r19
 532:	0a 94       	dec	r0
 534:	e2 f7       	brpl	.-8      	; 0x52e <_ZN4GPIO3setEb+0x68>
 536:	26 2b       	or	r18, r22
 538:	fc 01       	movw	r30, r24
 53a:	20 83       	st	Z, r18
 53c:	bc c0       	rjmp	.+376    	; 0x6b6 <_ZN4GPIO3setEb+0x1f0>
		else
			PORTE &= ~(1 << _bit);
		break;
 53e:	8e e2       	ldi	r24, 0x2E	; 46
	case 3:
	case 5:
		if (val)
			PORTE |= (1 << _bit);
		else
			PORTE &= ~(1 << _bit);
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	2e e2       	ldi	r18, 0x2E	; 46
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	f9 01       	movw	r30, r18
 548:	20 81       	ld	r18, Z
 54a:	62 2f       	mov	r22, r18
 54c:	29 81       	ldd	r18, Y+1	; 0x01
 54e:	3a 81       	ldd	r19, Y+2	; 0x02
 550:	f9 01       	movw	r30, r18
 552:	20 81       	ld	r18, Z
 554:	42 2f       	mov	r20, r18
 556:	50 e0       	ldi	r21, 0x00	; 0
 558:	21 e0       	ldi	r18, 0x01	; 1
 55a:	30 e0       	ldi	r19, 0x00	; 0
 55c:	04 2e       	mov	r0, r20
 55e:	02 c0       	rjmp	.+4      	; 0x564 <_ZN4GPIO3setEb+0x9e>
 560:	22 0f       	add	r18, r18
 562:	33 1f       	adc	r19, r19
 564:	0a 94       	dec	r0
 566:	e2 f7       	brpl	.-8      	; 0x560 <_ZN4GPIO3setEb+0x9a>
 568:	20 95       	com	r18
 56a:	26 23       	and	r18, r22
 56c:	fc 01       	movw	r30, r24
 56e:	20 83       	st	Z, r18
 570:	a2 c0       	rjmp	.+324    	; 0x6b6 <_ZN4GPIO3setEb+0x1f0>
		break;
 572:	8b 81       	ldd	r24, Y+3	; 0x03

	case 4:
		if (val)
 574:	88 23       	and	r24, r24
 576:	c9 f0       	breq	.+50     	; 0x5aa <_ZN4GPIO3setEb+0xe4>
 578:	84 e3       	ldi	r24, 0x34	; 52
			PORTG |= (1 << _bit);
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	24 e3       	ldi	r18, 0x34	; 52
 57e:	30 e0       	ldi	r19, 0x00	; 0
 580:	f9 01       	movw	r30, r18
 582:	20 81       	ld	r18, Z
 584:	62 2f       	mov	r22, r18
 586:	29 81       	ldd	r18, Y+1	; 0x01
 588:	3a 81       	ldd	r19, Y+2	; 0x02
 58a:	f9 01       	movw	r30, r18
 58c:	20 81       	ld	r18, Z
 58e:	42 2f       	mov	r20, r18
 590:	50 e0       	ldi	r21, 0x00	; 0
 592:	21 e0       	ldi	r18, 0x01	; 1
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	04 2e       	mov	r0, r20
 598:	02 c0       	rjmp	.+4      	; 0x59e <_ZN4GPIO3setEb+0xd8>
 59a:	22 0f       	add	r18, r18
 59c:	33 1f       	adc	r19, r19
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <_ZN4GPIO3setEb+0xd4>
 5a2:	26 2b       	or	r18, r22
 5a4:	fc 01       	movw	r30, r24
 5a6:	20 83       	st	Z, r18
 5a8:	86 c0       	rjmp	.+268    	; 0x6b6 <_ZN4GPIO3setEb+0x1f0>
		else
			PORTG &= ~(1 << _bit);
		break;
 5aa:	84 e3       	ldi	r24, 0x34	; 52

	case 4:
		if (val)
			PORTG |= (1 << _bit);
		else
			PORTG &= ~(1 << _bit);
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	24 e3       	ldi	r18, 0x34	; 52
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	f9 01       	movw	r30, r18
 5b4:	20 81       	ld	r18, Z
 5b6:	62 2f       	mov	r22, r18
 5b8:	29 81       	ldd	r18, Y+1	; 0x01
 5ba:	3a 81       	ldd	r19, Y+2	; 0x02
 5bc:	f9 01       	movw	r30, r18
 5be:	20 81       	ld	r18, Z
 5c0:	42 2f       	mov	r20, r18
 5c2:	50 e0       	ldi	r21, 0x00	; 0
 5c4:	21 e0       	ldi	r18, 0x01	; 1
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	04 2e       	mov	r0, r20
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <_ZN4GPIO3setEb+0x10a>
 5cc:	22 0f       	add	r18, r18
 5ce:	33 1f       	adc	r19, r19
 5d0:	0a 94       	dec	r0
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <_ZN4GPIO3setEb+0x106>
 5d4:	20 95       	com	r18
 5d6:	26 23       	and	r18, r22
 5d8:	fc 01       	movw	r30, r24
 5da:	20 83       	st	Z, r18
 5dc:	6c c0       	rjmp	.+216    	; 0x6b6 <_ZN4GPIO3setEb+0x1f0>
		break;
 5de:	8b 81       	ldd	r24, Y+3	; 0x03

	case 6:
	case 7:
	case 8:
	case 9:
		if (val)
 5e0:	88 23       	and	r24, r24
 5e2:	c9 f0       	breq	.+50     	; 0x616 <_ZN4GPIO3setEb+0x150>
 5e4:	82 e0       	ldi	r24, 0x02	; 2
			PORTH |= (1 << _bit);
 5e6:	91 e0       	ldi	r25, 0x01	; 1
 5e8:	22 e0       	ldi	r18, 0x02	; 2
 5ea:	31 e0       	ldi	r19, 0x01	; 1
 5ec:	f9 01       	movw	r30, r18
 5ee:	20 81       	ld	r18, Z
 5f0:	62 2f       	mov	r22, r18
 5f2:	29 81       	ldd	r18, Y+1	; 0x01
 5f4:	3a 81       	ldd	r19, Y+2	; 0x02
 5f6:	f9 01       	movw	r30, r18
 5f8:	20 81       	ld	r18, Z
 5fa:	42 2f       	mov	r20, r18
 5fc:	50 e0       	ldi	r21, 0x00	; 0
 5fe:	21 e0       	ldi	r18, 0x01	; 1
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	04 2e       	mov	r0, r20
 604:	02 c0       	rjmp	.+4      	; 0x60a <_ZN4GPIO3setEb+0x144>
 606:	22 0f       	add	r18, r18
 608:	33 1f       	adc	r19, r19
 60a:	0a 94       	dec	r0
 60c:	e2 f7       	brpl	.-8      	; 0x606 <_ZN4GPIO3setEb+0x140>
 60e:	26 2b       	or	r18, r22
 610:	fc 01       	movw	r30, r24
 612:	20 83       	st	Z, r18
 614:	50 c0       	rjmp	.+160    	; 0x6b6 <_ZN4GPIO3setEb+0x1f0>
		else
			PORTH &= ~(1 << _bit);
		break;
 616:	82 e0       	ldi	r24, 0x02	; 2
	case 8:
	case 9:
		if (val)
			PORTH |= (1 << _bit);
		else
			PORTH &= ~(1 << _bit);
 618:	91 e0       	ldi	r25, 0x01	; 1
 61a:	22 e0       	ldi	r18, 0x02	; 2
 61c:	31 e0       	ldi	r19, 0x01	; 1
 61e:	f9 01       	movw	r30, r18
 620:	20 81       	ld	r18, Z
 622:	62 2f       	mov	r22, r18
 624:	29 81       	ldd	r18, Y+1	; 0x01
 626:	3a 81       	ldd	r19, Y+2	; 0x02
 628:	f9 01       	movw	r30, r18
 62a:	20 81       	ld	r18, Z
 62c:	42 2f       	mov	r20, r18
 62e:	50 e0       	ldi	r21, 0x00	; 0
 630:	21 e0       	ldi	r18, 0x01	; 1
 632:	30 e0       	ldi	r19, 0x00	; 0
 634:	04 2e       	mov	r0, r20
 636:	02 c0       	rjmp	.+4      	; 0x63c <_ZN4GPIO3setEb+0x176>
 638:	22 0f       	add	r18, r18
 63a:	33 1f       	adc	r19, r19
 63c:	0a 94       	dec	r0
 63e:	e2 f7       	brpl	.-8      	; 0x638 <_ZN4GPIO3setEb+0x172>
 640:	20 95       	com	r18
 642:	26 23       	and	r18, r22
 644:	fc 01       	movw	r30, r24
 646:	20 83       	st	Z, r18
 648:	36 c0       	rjmp	.+108    	; 0x6b6 <_ZN4GPIO3setEb+0x1f0>
		break;
 64a:	8b 81       	ldd	r24, Y+3	; 0x03

	case 10:
	case 11:
	case 12:
	case 13:
		if (val)
 64c:	88 23       	and	r24, r24
 64e:	c9 f0       	breq	.+50     	; 0x682 <_ZN4GPIO3setEb+0x1bc>
 650:	85 e2       	ldi	r24, 0x25	; 37
			PORTB |= (1 << _bit);
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	25 e2       	ldi	r18, 0x25	; 37
 656:	30 e0       	ldi	r19, 0x00	; 0
 658:	f9 01       	movw	r30, r18
 65a:	20 81       	ld	r18, Z
 65c:	62 2f       	mov	r22, r18
 65e:	29 81       	ldd	r18, Y+1	; 0x01
 660:	3a 81       	ldd	r19, Y+2	; 0x02
 662:	f9 01       	movw	r30, r18
 664:	20 81       	ld	r18, Z
 666:	42 2f       	mov	r20, r18
 668:	50 e0       	ldi	r21, 0x00	; 0
 66a:	21 e0       	ldi	r18, 0x01	; 1
 66c:	30 e0       	ldi	r19, 0x00	; 0
 66e:	04 2e       	mov	r0, r20
 670:	02 c0       	rjmp	.+4      	; 0x676 <_ZN4GPIO3setEb+0x1b0>
 672:	22 0f       	add	r18, r18
 674:	33 1f       	adc	r19, r19
 676:	0a 94       	dec	r0
 678:	e2 f7       	brpl	.-8      	; 0x672 <_ZN4GPIO3setEb+0x1ac>
 67a:	26 2b       	or	r18, r22
 67c:	fc 01       	movw	r30, r24
 67e:	20 83       	st	Z, r18
 680:	19 c0       	rjmp	.+50     	; 0x6b4 <_ZN4GPIO3setEb+0x1ee>
 682:	85 e2       	ldi	r24, 0x25	; 37
		else
			PORTB &= ~(1 << _bit);
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	25 e2       	ldi	r18, 0x25	; 37
 688:	30 e0       	ldi	r19, 0x00	; 0
 68a:	f9 01       	movw	r30, r18
 68c:	20 81       	ld	r18, Z
 68e:	62 2f       	mov	r22, r18
 690:	29 81       	ldd	r18, Y+1	; 0x01
 692:	3a 81       	ldd	r19, Y+2	; 0x02
 694:	f9 01       	movw	r30, r18
 696:	20 81       	ld	r18, Z
 698:	42 2f       	mov	r20, r18
 69a:	50 e0       	ldi	r21, 0x00	; 0
 69c:	21 e0       	ldi	r18, 0x01	; 1
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	04 2e       	mov	r0, r20
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <_ZN4GPIO3setEb+0x1e2>
 6a4:	22 0f       	add	r18, r18
 6a6:	33 1f       	adc	r19, r19
 6a8:	0a 94       	dec	r0
 6aa:	e2 f7       	brpl	.-8      	; 0x6a4 <_ZN4GPIO3setEb+0x1de>
 6ac:	20 95       	com	r18
 6ae:	26 23       	and	r18, r22
 6b0:	fc 01       	movw	r30, r24
 6b2:	20 83       	st	Z, r18
 6b4:	00 00       	nop
		break;
 6b6:	0f 90       	pop	r0

	}

}
 6b8:	0f 90       	pop	r0
 6ba:	0f 90       	pop	r0
 6bc:	df 91       	pop	r29
 6be:	cf 91       	pop	r28
 6c0:	08 95       	ret

000006c2 <_ZN4GPIO5clearEv>:

void GPIO::clear() {
 6c2:	cf 93       	push	r28
 6c4:	df 93       	push	r29
 6c6:	1f 92       	push	r1
 6c8:	1f 92       	push	r1
 6ca:	cd b7       	in	r28, 0x3d	; 61
 6cc:	de b7       	in	r29, 0x3e	; 62
 6ce:	9a 83       	std	Y+2, r25	; 0x02
 6d0:	89 83       	std	Y+1, r24	; 0x01
	this->set(0);
 6d2:	89 81       	ldd	r24, Y+1	; 0x01
 6d4:	9a 81       	ldd	r25, Y+2	; 0x02
 6d6:	60 e0       	ldi	r22, 0x00	; 0
 6d8:	f6 de       	rcall	.-532    	; 0x4c6 <_ZN4GPIO3setEb>
 6da:	0f 90       	pop	r0
}
 6dc:	0f 90       	pop	r0
 6de:	df 91       	pop	r29
 6e0:	cf 91       	pop	r28
 6e2:	08 95       	ret

000006e4 <_ZN4GPIO6toggleEv>:

void GPIO::toggle() {
 6e4:	cf 93       	push	r28
 6e6:	df 93       	push	r29
 6e8:	1f 92       	push	r1
 6ea:	1f 92       	push	r1
 6ec:	cd b7       	in	r28, 0x3d	; 61
 6ee:	de b7       	in	r29, 0x3e	; 62
 6f0:	9a 83       	std	Y+2, r25	; 0x02
 6f2:	89 83       	std	Y+1, r24	; 0x01
	switch (_id) {
 6f4:	89 81       	ldd	r24, Y+1	; 0x01
 6f6:	9a 81       	ldd	r25, Y+2	; 0x02
 6f8:	fc 01       	movw	r30, r24
 6fa:	81 81       	ldd	r24, Z+1	; 0x01
 6fc:	88 2f       	mov	r24, r24
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	aa 27       	eor	r26, r26
 702:	97 fd       	sbrc	r25, 7
 704:	a0 95       	com	r26
 706:	ba 2f       	mov	r27, r26
 708:	40 e0       	ldi	r20, 0x00	; 0
 70a:	50 e0       	ldi	r21, 0x00	; 0
 70c:	2d e0       	ldi	r18, 0x0D	; 13
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	84 1b       	sub	r24, r20
 712:	95 0b       	sbc	r25, r21
 714:	28 17       	cp	r18, r24
 716:	39 07       	cpc	r19, r25
 718:	08 f4       	brcc	.+2      	; 0x71c <_ZN4GPIO6toggleEv+0x38>
 71a:	50 c0       	rjmp	.+160    	; 0x7bc <_ZN4GPIO6toggleEv+0xd8>
 71c:	82 57       	subi	r24, 0x72	; 114
 71e:	9f 4f       	sbci	r25, 0xFF	; 255
 720:	fc 01       	movw	r30, r24
 722:	3c c2       	rjmp	.+1144   	; 0xb9c <__tablejump2__>
 724:	8c e2       	ldi	r24, 0x2C	; 44
	case 0:
	case 1:
	case 2:
	case 3:
	case 5:
		PINE = (1 << _bit);
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	29 81       	ldd	r18, Y+1	; 0x01
 72a:	3a 81       	ldd	r19, Y+2	; 0x02
 72c:	f9 01       	movw	r30, r18
 72e:	20 81       	ld	r18, Z
 730:	42 2f       	mov	r20, r18
 732:	50 e0       	ldi	r21, 0x00	; 0
 734:	21 e0       	ldi	r18, 0x01	; 1
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	04 2e       	mov	r0, r20
 73a:	02 c0       	rjmp	.+4      	; 0x740 <_ZN4GPIO6toggleEv+0x5c>
 73c:	22 0f       	add	r18, r18
 73e:	33 1f       	adc	r19, r19
 740:	0a 94       	dec	r0
 742:	e2 f7       	brpl	.-8      	; 0x73c <_ZN4GPIO6toggleEv+0x58>
 744:	fc 01       	movw	r30, r24
 746:	20 83       	st	Z, r18
 748:	39 c0       	rjmp	.+114    	; 0x7bc <_ZN4GPIO6toggleEv+0xd8>
		break;
 74a:	82 e3       	ldi	r24, 0x32	; 50

	case 4:
		PING = (1 << _bit);
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	29 81       	ldd	r18, Y+1	; 0x01
 750:	3a 81       	ldd	r19, Y+2	; 0x02
 752:	f9 01       	movw	r30, r18
 754:	20 81       	ld	r18, Z
 756:	42 2f       	mov	r20, r18
 758:	50 e0       	ldi	r21, 0x00	; 0
 75a:	21 e0       	ldi	r18, 0x01	; 1
 75c:	30 e0       	ldi	r19, 0x00	; 0
 75e:	04 2e       	mov	r0, r20
 760:	02 c0       	rjmp	.+4      	; 0x766 <_ZN4GPIO6toggleEv+0x82>
 762:	22 0f       	add	r18, r18
 764:	33 1f       	adc	r19, r19
 766:	0a 94       	dec	r0
 768:	e2 f7       	brpl	.-8      	; 0x762 <_ZN4GPIO6toggleEv+0x7e>
 76a:	fc 01       	movw	r30, r24
 76c:	20 83       	st	Z, r18
 76e:	26 c0       	rjmp	.+76     	; 0x7bc <_ZN4GPIO6toggleEv+0xd8>
		break;
 770:	80 e0       	ldi	r24, 0x00	; 0

	case 6:
	case 7:
	case 8:
	case 9:
		PINH = (1 << _bit);
 772:	91 e0       	ldi	r25, 0x01	; 1
 774:	29 81       	ldd	r18, Y+1	; 0x01
 776:	3a 81       	ldd	r19, Y+2	; 0x02
 778:	f9 01       	movw	r30, r18
 77a:	20 81       	ld	r18, Z
 77c:	42 2f       	mov	r20, r18
 77e:	50 e0       	ldi	r21, 0x00	; 0
 780:	21 e0       	ldi	r18, 0x01	; 1
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	04 2e       	mov	r0, r20
 786:	02 c0       	rjmp	.+4      	; 0x78c <_ZN4GPIO6toggleEv+0xa8>
 788:	22 0f       	add	r18, r18
 78a:	33 1f       	adc	r19, r19
 78c:	0a 94       	dec	r0
 78e:	e2 f7       	brpl	.-8      	; 0x788 <_ZN4GPIO6toggleEv+0xa4>
 790:	fc 01       	movw	r30, r24
 792:	20 83       	st	Z, r18
 794:	13 c0       	rjmp	.+38     	; 0x7bc <_ZN4GPIO6toggleEv+0xd8>
		break;
 796:	83 e2       	ldi	r24, 0x23	; 35

	case 10:
	case 11:
	case 12:
	case 13:
		PINB = (1 << _bit);
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	29 81       	ldd	r18, Y+1	; 0x01
 79c:	3a 81       	ldd	r19, Y+2	; 0x02
 79e:	f9 01       	movw	r30, r18
 7a0:	20 81       	ld	r18, Z
 7a2:	42 2f       	mov	r20, r18
 7a4:	50 e0       	ldi	r21, 0x00	; 0
 7a6:	21 e0       	ldi	r18, 0x01	; 1
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	04 2e       	mov	r0, r20
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <_ZN4GPIO6toggleEv+0xce>
 7ae:	22 0f       	add	r18, r18
 7b0:	33 1f       	adc	r19, r19
 7b2:	0a 94       	dec	r0
 7b4:	e2 f7       	brpl	.-8      	; 0x7ae <_ZN4GPIO6toggleEv+0xca>
 7b6:	fc 01       	movw	r30, r24
 7b8:	20 83       	st	Z, r18
 7ba:	00 00       	nop
		break;
 7bc:	0f 90       	pop	r0

	}
}
 7be:	0f 90       	pop	r0
 7c0:	df 91       	pop	r29
 7c2:	cf 91       	pop	r28
 7c4:	08 95       	ret

000007c6 <main>:

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
GPIO led6(6, GPIO::OUTPUT);		//PH0

int main(void){
 7c6:	cf 93       	push	r28
 7c8:	df 93       	push	r29
 7ca:	cd b7       	in	r28, 0x3d	; 61
 7cc:	de b7       	in	r29, 0x3e	; 62
 7ce:	aa 97       	sbiw	r28, 0x2a	; 42
 7d0:	0f b6       	in	r0, 0x3f	; 63
 7d2:	f8 94       	cli
 7d4:	de bf       	out	0x3e, r29	; 62
 7d6:	0f be       	out	0x3f, r0	; 63
 7d8:	cd bf       	out	0x3d, r28	; 61

	UCSR0B = 0;
 7da:	81 ec       	ldi	r24, 0xC1	; 193
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	fc 01       	movw	r30, r24
 7e0:	10 82       	st	Z, r1

	led0.set(1);
 7e2:	61 e0       	ldi	r22, 0x01	; 1
 7e4:	80 e0       	ldi	r24, 0x00	; 0
 7e6:	92 e0       	ldi	r25, 0x02	; 2
 7e8:	6e de       	rcall	.-804    	; 0x4c6 <_ZN4GPIO3setEb>
 7ea:	61 e0       	ldi	r22, 0x01	; 1
	led1.set(1);
 7ec:	82 e0       	ldi	r24, 0x02	; 2
 7ee:	92 e0       	ldi	r25, 0x02	; 2
 7f0:	6a de       	rcall	.-812    	; 0x4c6 <_ZN4GPIO3setEb>
 7f2:	88 e0       	ldi	r24, 0x08	; 8
 7f4:	92 e0       	ldi	r25, 0x02	; 2
	led6.clear();
 7f6:	65 df       	rcall	.-310    	; 0x6c2 <_ZN4GPIO5clearEv>
 7f8:	86 e0       	ldi	r24, 0x06	; 6
 7fa:	92 e0       	ldi	r25, 0x02	; 2
 7fc:	62 df       	rcall	.-316    	; 0x6c2 <_ZN4GPIO5clearEv>
	led4.clear();
 7fe:	84 e0       	ldi	r24, 0x04	; 4
 800:	92 e0       	ldi	r25, 0x02	; 2
 802:	5f df       	rcall	.-322    	; 0x6c2 <_ZN4GPIO5clearEv>
 804:	80 e0       	ldi	r24, 0x00	; 0
	led13.clear();
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	aa e7       	ldi	r26, 0x7A	; 122
 80a:	b4 e4       	ldi	r27, 0x44	; 68
 80c:	89 83       	std	Y+1, r24	; 0x01
 80e:	9a 83       	std	Y+2, r25	; 0x02
 810:	ab 83       	std	Y+3, r26	; 0x03
 812:	bc 83       	std	Y+4, r27	; 0x04
 814:	20 e0       	ldi	r18, 0x00	; 0
 816:	30 e0       	ldi	r19, 0x00	; 0
 818:	4a e7       	ldi	r20, 0x7A	; 122
 81a:	55 e4       	ldi	r21, 0x45	; 69
 81c:	69 81       	ldd	r22, Y+1	; 0x01
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 81e:	7a 81       	ldd	r23, Y+2	; 0x02
 820:	8b 81       	ldd	r24, Y+3	; 0x03
 822:	9c 81       	ldd	r25, Y+4	; 0x04
 824:	46 d2       	rcall	.+1164   	; 0xcb2 <__mulsf3>
 826:	dc 01       	movw	r26, r24
 828:	cb 01       	movw	r24, r22
 82a:	8d 83       	std	Y+5, r24	; 0x05
 82c:	9e 83       	std	Y+6, r25	; 0x06
 82e:	af 83       	std	Y+7, r26	; 0x07
 830:	b8 87       	std	Y+8, r27	; 0x08
 832:	20 e0       	ldi	r18, 0x00	; 0
 834:	30 e0       	ldi	r19, 0x00	; 0
 836:	40 e8       	ldi	r20, 0x80	; 128
 838:	5f e3       	ldi	r21, 0x3F	; 63
 83a:	6d 81       	ldd	r22, Y+5	; 0x05
 83c:	7e 81       	ldd	r23, Y+6	; 0x06
	if (__tmp < 1.0)
 83e:	8f 81       	ldd	r24, Y+7	; 0x07
 840:	98 85       	ldd	r25, Y+8	; 0x08
 842:	b6 d1       	rcall	.+876    	; 0xbb0 <__cmpsf2>
 844:	88 23       	and	r24, r24
 846:	2c f4       	brge	.+10     	; 0x852 <main+0x8c>
 848:	81 e0       	ldi	r24, 0x01	; 1
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	9a 87       	std	Y+10, r25	; 0x0a
 84e:	89 87       	std	Y+9, r24	; 0x09
 850:	3b c0       	rjmp	.+118    	; 0x8c8 <main+0x102>
 852:	20 e0       	ldi	r18, 0x00	; 0
 854:	3f ef       	ldi	r19, 0xFF	; 255
		__ticks = 1;
 856:	4f e7       	ldi	r20, 0x7F	; 127
 858:	57 e4       	ldi	r21, 0x47	; 71
 85a:	6d 81       	ldd	r22, Y+5	; 0x05
 85c:	7e 81       	ldd	r23, Y+6	; 0x06
 85e:	8f 81       	ldd	r24, Y+7	; 0x07
	else if (__tmp > 65535)
 860:	98 85       	ldd	r25, Y+8	; 0x08
 862:	23 d2       	rcall	.+1094   	; 0xcaa <__gesf2>
 864:	18 16       	cp	r1, r24
 866:	3c f5       	brge	.+78     	; 0x8b6 <main+0xf0>
 868:	20 e0       	ldi	r18, 0x00	; 0
 86a:	30 e0       	ldi	r19, 0x00	; 0
 86c:	40 e2       	ldi	r20, 0x20	; 32
 86e:	51 e4       	ldi	r21, 0x41	; 65
 870:	69 81       	ldd	r22, Y+1	; 0x01
 872:	7a 81       	ldd	r23, Y+2	; 0x02
 874:	8b 81       	ldd	r24, Y+3	; 0x03
 876:	9c 81       	ldd	r25, Y+4	; 0x04
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 878:	1c d2       	rcall	.+1080   	; 0xcb2 <__mulsf3>
 87a:	dc 01       	movw	r26, r24
 87c:	cb 01       	movw	r24, r22
 87e:	bc 01       	movw	r22, r24
 880:	cd 01       	movw	r24, r26
 882:	9a d1       	rcall	.+820    	; 0xbb8 <__fixunssfsi>
 884:	dc 01       	movw	r26, r24
 886:	cb 01       	movw	r24, r22
 888:	9a 87       	std	Y+10, r25	; 0x0a
 88a:	89 87       	std	Y+9, r24	; 0x09
 88c:	0f c0       	rjmp	.+30     	; 0x8ac <main+0xe6>
 88e:	80 e9       	ldi	r24, 0x90	; 144
 890:	91 e0       	ldi	r25, 0x01	; 1
 892:	9c 87       	std	Y+12, r25	; 0x0c
 894:	8b 87       	std	Y+11, r24	; 0x0b
 896:	8b 85       	ldd	r24, Y+11	; 0x0b
 898:	9c 85       	ldd	r25, Y+12	; 0x0c
 89a:	01 97       	sbiw	r24, 0x01	; 1
 89c:	f1 f7       	brne	.-4      	; 0x89a <main+0xd4>
 89e:	9c 87       	std	Y+12, r25	; 0x0c
 8a0:	8b 87       	std	Y+11, r24	; 0x0b
 8a2:	89 85       	ldd	r24, Y+9	; 0x09
 8a4:	9a 85       	ldd	r25, Y+10	; 0x0a
 8a6:	01 97       	sbiw	r24, 0x01	; 1
 8a8:	9a 87       	std	Y+10, r25	; 0x0a
 8aa:	89 87       	std	Y+9, r24	; 0x09
 8ac:	89 85       	ldd	r24, Y+9	; 0x09
 8ae:	9a 85       	ldd	r25, Y+10	; 0x0a
 8b0:	00 97       	sbiw	r24, 0x00	; 0
 8b2:	69 f7       	brne	.-38     	; 0x88e <main+0xc8>
 8b4:	13 c0       	rjmp	.+38     	; 0x8dc <main+0x116>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 8b6:	6d 81       	ldd	r22, Y+5	; 0x05
 8b8:	7e 81       	ldd	r23, Y+6	; 0x06
 8ba:	8f 81       	ldd	r24, Y+7	; 0x07
 8bc:	98 85       	ldd	r25, Y+8	; 0x08
 8be:	7c d1       	rcall	.+760    	; 0xbb8 <__fixunssfsi>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 8c0:	dc 01       	movw	r26, r24
 8c2:	cb 01       	movw	r24, r22
 8c4:	9a 87       	std	Y+10, r25	; 0x0a
 8c6:	89 87       	std	Y+9, r24	; 0x09
 8c8:	89 85       	ldd	r24, Y+9	; 0x09
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 8ca:	9a 85       	ldd	r25, Y+10	; 0x0a
 8cc:	9e 87       	std	Y+14, r25	; 0x0e
 8ce:	8d 87       	std	Y+13, r24	; 0x0d
 8d0:	8d 85       	ldd	r24, Y+13	; 0x0d
 8d2:	9e 85       	ldd	r25, Y+14	; 0x0e
 8d4:	01 97       	sbiw	r24, 0x01	; 1
 8d6:	f1 f7       	brne	.-4      	; 0x8d4 <main+0x10e>
 8d8:	9e 87       	std	Y+14, r25	; 0x0e
 8da:	8d 87       	std	Y+13, r24	; 0x0d
 8dc:	80 e0       	ldi	r24, 0x00	; 0
 8de:	92 e0       	ldi	r25, 0x02	; 2
 8e0:	f0 de       	rcall	.-544    	; 0x6c2 <_ZN4GPIO5clearEv>
 8e2:	82 e0       	ldi	r24, 0x02	; 2
 8e4:	92 e0       	ldi	r25, 0x02	; 2
 8e6:	ed de       	rcall	.-550    	; 0x6c2 <_ZN4GPIO5clearEv>
 8e8:	61 e0       	ldi	r22, 0x01	; 1
 8ea:	88 e0       	ldi	r24, 0x08	; 8
 8ec:	92 e0       	ldi	r25, 0x02	; 2
 8ee:	eb dd       	rcall	.-1066   	; 0x4c6 <_ZN4GPIO3setEb>
 8f0:	61 e0       	ldi	r22, 0x01	; 1
	_delay_ms(1000);
	led0.clear();
 8f2:	86 e0       	ldi	r24, 0x06	; 6
 8f4:	92 e0       	ldi	r25, 0x02	; 2
 8f6:	e7 dd       	rcall	.-1074   	; 0x4c6 <_ZN4GPIO3setEb>
 8f8:	61 e0       	ldi	r22, 0x01	; 1
	led1.clear();
 8fa:	84 e0       	ldi	r24, 0x04	; 4
 8fc:	92 e0       	ldi	r25, 0x02	; 2
 8fe:	e3 dd       	rcall	.-1082   	; 0x4c6 <_ZN4GPIO3setEb>
 900:	80 e0       	ldi	r24, 0x00	; 0
	led6.set(1);
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	aa e7       	ldi	r26, 0x7A	; 122
 906:	b4 e4       	ldi	r27, 0x44	; 68
 908:	8f 87       	std	Y+15, r24	; 0x0f
 90a:	98 8b       	std	Y+16, r25	; 0x10
	led4.set(1);
 90c:	a9 8b       	std	Y+17, r26	; 0x11
 90e:	ba 8b       	std	Y+18, r27	; 0x12
 910:	20 e0       	ldi	r18, 0x00	; 0
 912:	30 e0       	ldi	r19, 0x00	; 0
 914:	4a e7       	ldi	r20, 0x7A	; 122
 916:	55 e4       	ldi	r21, 0x45	; 69
 918:	6f 85       	ldd	r22, Y+15	; 0x0f
 91a:	78 89       	ldd	r23, Y+16	; 0x10
 91c:	89 89       	ldd	r24, Y+17	; 0x11
 91e:	9a 89       	ldd	r25, Y+18	; 0x12
 920:	c8 d1       	rcall	.+912    	; 0xcb2 <__mulsf3>
 922:	dc 01       	movw	r26, r24
 924:	cb 01       	movw	r24, r22
 926:	8b 8b       	std	Y+19, r24	; 0x13
 928:	9c 8b       	std	Y+20, r25	; 0x14
 92a:	ad 8b       	std	Y+21, r26	; 0x15
 92c:	be 8b       	std	Y+22, r27	; 0x16
 92e:	20 e0       	ldi	r18, 0x00	; 0
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 930:	30 e0       	ldi	r19, 0x00	; 0
 932:	40 e8       	ldi	r20, 0x80	; 128
 934:	5f e3       	ldi	r21, 0x3F	; 63
 936:	6b 89       	ldd	r22, Y+19	; 0x13
 938:	7c 89       	ldd	r23, Y+20	; 0x14
 93a:	8d 89       	ldd	r24, Y+21	; 0x15
 93c:	9e 89       	ldd	r25, Y+22	; 0x16
 93e:	38 d1       	rcall	.+624    	; 0xbb0 <__cmpsf2>
 940:	88 23       	and	r24, r24
 942:	2c f4       	brge	.+10     	; 0x94e <main+0x188>
 944:	81 e0       	ldi	r24, 0x01	; 1
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	98 8f       	std	Y+24, r25	; 0x18
 94a:	8f 8b       	std	Y+23, r24	; 0x17
 94c:	3b c0       	rjmp	.+118    	; 0x9c4 <main+0x1fe>
 94e:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
 950:	3f ef       	ldi	r19, 0xFF	; 255
 952:	4f e7       	ldi	r20, 0x7F	; 127
 954:	57 e4       	ldi	r21, 0x47	; 71
 956:	6b 89       	ldd	r22, Y+19	; 0x13
 958:	7c 89       	ldd	r23, Y+20	; 0x14
 95a:	8d 89       	ldd	r24, Y+21	; 0x15
 95c:	9e 89       	ldd	r25, Y+22	; 0x16
 95e:	a5 d1       	rcall	.+842    	; 0xcaa <__gesf2>
 960:	18 16       	cp	r1, r24
 962:	3c f5       	brge	.+78     	; 0x9b2 <main+0x1ec>
 964:	20 e0       	ldi	r18, 0x00	; 0
 966:	30 e0       	ldi	r19, 0x00	; 0
		__ticks = 1;
 968:	40 e2       	ldi	r20, 0x20	; 32
 96a:	51 e4       	ldi	r21, 0x41	; 65
 96c:	6f 85       	ldd	r22, Y+15	; 0x0f
 96e:	78 89       	ldd	r23, Y+16	; 0x10
 970:	89 89       	ldd	r24, Y+17	; 0x11
	else if (__tmp > 65535)
 972:	9a 89       	ldd	r25, Y+18	; 0x12
 974:	9e d1       	rcall	.+828    	; 0xcb2 <__mulsf3>
 976:	dc 01       	movw	r26, r24
 978:	cb 01       	movw	r24, r22
 97a:	bc 01       	movw	r22, r24
 97c:	cd 01       	movw	r24, r26
 97e:	1c d1       	rcall	.+568    	; 0xbb8 <__fixunssfsi>
 980:	dc 01       	movw	r26, r24
 982:	cb 01       	movw	r24, r22
 984:	98 8f       	std	Y+24, r25	; 0x18
 986:	8f 8b       	std	Y+23, r24	; 0x17
 988:	0f c0       	rjmp	.+30     	; 0x9a8 <main+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 98a:	80 e9       	ldi	r24, 0x90	; 144
 98c:	91 e0       	ldi	r25, 0x01	; 1
 98e:	9a 8f       	std	Y+26, r25	; 0x1a
 990:	89 8f       	std	Y+25, r24	; 0x19
 992:	89 8d       	ldd	r24, Y+25	; 0x19
 994:	9a 8d       	ldd	r25, Y+26	; 0x1a
 996:	01 97       	sbiw	r24, 0x01	; 1
 998:	f1 f7       	brne	.-4      	; 0x996 <main+0x1d0>
 99a:	9a 8f       	std	Y+26, r25	; 0x1a
 99c:	89 8f       	std	Y+25, r24	; 0x19
 99e:	8f 89       	ldd	r24, Y+23	; 0x17
 9a0:	98 8d       	ldd	r25, Y+24	; 0x18
 9a2:	01 97       	sbiw	r24, 0x01	; 1
 9a4:	98 8f       	std	Y+24, r25	; 0x18
 9a6:	8f 8b       	std	Y+23, r24	; 0x17
 9a8:	8f 89       	ldd	r24, Y+23	; 0x17
 9aa:	98 8d       	ldd	r25, Y+24	; 0x18
 9ac:	00 97       	sbiw	r24, 0x00	; 0
 9ae:	69 f7       	brne	.-38     	; 0x98a <main+0x1c4>
 9b0:	13 c0       	rjmp	.+38     	; 0x9d8 <main+0x212>
 9b2:	6b 89       	ldd	r22, Y+19	; 0x13
 9b4:	7c 89       	ldd	r23, Y+20	; 0x14
 9b6:	8d 89       	ldd	r24, Y+21	; 0x15
 9b8:	9e 89       	ldd	r25, Y+22	; 0x16
 9ba:	fe d0       	rcall	.+508    	; 0xbb8 <__fixunssfsi>
 9bc:	dc 01       	movw	r26, r24
 9be:	cb 01       	movw	r24, r22
 9c0:	98 8f       	std	Y+24, r25	; 0x18
 9c2:	8f 8b       	std	Y+23, r24	; 0x17
 9c4:	8f 89       	ldd	r24, Y+23	; 0x17
 9c6:	98 8d       	ldd	r25, Y+24	; 0x18
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 9c8:	9c 8f       	std	Y+28, r25	; 0x1c
 9ca:	8b 8f       	std	Y+27, r24	; 0x1b
 9cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
 9ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
 9d0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 9d2:	f1 f7       	brne	.-4      	; 0x9d0 <main+0x20a>
 9d4:	9c 8f       	std	Y+28, r25	; 0x1c
 9d6:	8b 8f       	std	Y+27, r24	; 0x1b
 9d8:	80 e0       	ldi	r24, 0x00	; 0
 9da:	92 e0       	ldi	r25, 0x02	; 2
 9dc:	83 de       	rcall	.-762    	; 0x6e4 <_ZN4GPIO6toggleEv>
 9de:	82 e0       	ldi	r24, 0x02	; 2
 9e0:	92 e0       	ldi	r25, 0x02	; 2
 9e2:	80 de       	rcall	.-768    	; 0x6e4 <_ZN4GPIO6toggleEv>
 9e4:	88 e0       	ldi	r24, 0x08	; 8
 9e6:	92 e0       	ldi	r25, 0x02	; 2
 9e8:	7d de       	rcall	.-774    	; 0x6e4 <_ZN4GPIO6toggleEv>
 9ea:	86 e0       	ldi	r24, 0x06	; 6
 9ec:	92 e0       	ldi	r25, 0x02	; 2
 9ee:	7a de       	rcall	.-780    	; 0x6e4 <_ZN4GPIO6toggleEv>
 9f0:	84 e0       	ldi	r24, 0x04	; 4
 9f2:	92 e0       	ldi	r25, 0x02	; 2
 9f4:	77 de       	rcall	.-786    	; 0x6e4 <_ZN4GPIO6toggleEv>
 9f6:	80 e0       	ldi	r24, 0x00	; 0
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	aa e7       	ldi	r26, 0x7A	; 122
 9fc:	b4 e4       	ldi	r27, 0x44	; 68
 9fe:	8d 8f       	std	Y+29, r24	; 0x1d
 a00:	9e 8f       	std	Y+30, r25	; 0x1e
 a02:	af 8f       	std	Y+31, r26	; 0x1f
	led13.set(1);
	_delay_ms(1000);

	while (1){
		led0.toggle();
 a04:	b8 a3       	std	Y+32, r27	; 0x20
 a06:	20 e0       	ldi	r18, 0x00	; 0
 a08:	30 e0       	ldi	r19, 0x00	; 0
 a0a:	4a e7       	ldi	r20, 0x7A	; 122
		led1.toggle();
 a0c:	55 e4       	ldi	r21, 0x45	; 69
 a0e:	6d 8d       	ldd	r22, Y+29	; 0x1d
 a10:	7e 8d       	ldd	r23, Y+30	; 0x1e
 a12:	8f 8d       	ldd	r24, Y+31	; 0x1f
		led6.toggle();
 a14:	98 a1       	ldd	r25, Y+32	; 0x20
 a16:	4d d1       	rcall	.+666    	; 0xcb2 <__mulsf3>
 a18:	dc 01       	movw	r26, r24
 a1a:	cb 01       	movw	r24, r22
		led4.toggle();
 a1c:	89 a3       	std	Y+33, r24	; 0x21
 a1e:	9a a3       	std	Y+34, r25	; 0x22
 a20:	ab a3       	std	Y+35, r26	; 0x23
 a22:	bc a3       	std	Y+36, r27	; 0x24
 a24:	20 e0       	ldi	r18, 0x00	; 0
 a26:	30 e0       	ldi	r19, 0x00	; 0
 a28:	40 e8       	ldi	r20, 0x80	; 128
 a2a:	5f e3       	ldi	r21, 0x3F	; 63
 a2c:	69 a1       	ldd	r22, Y+33	; 0x21
 a2e:	7a a1       	ldd	r23, Y+34	; 0x22
 a30:	8b a1       	ldd	r24, Y+35	; 0x23
 a32:	9c a1       	ldd	r25, Y+36	; 0x24
 a34:	bd d0       	rcall	.+378    	; 0xbb0 <__cmpsf2>
 a36:	88 23       	and	r24, r24
 a38:	2c f4       	brge	.+10     	; 0xa44 <main+0x27e>
 a3a:	81 e0       	ldi	r24, 0x01	; 1
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 a3c:	90 e0       	ldi	r25, 0x00	; 0
 a3e:	9e a3       	std	Y+38, r25	; 0x26
 a40:	8d a3       	std	Y+37, r24	; 0x25
 a42:	3b c0       	rjmp	.+118    	; 0xaba <main+0x2f4>
 a44:	20 e0       	ldi	r18, 0x00	; 0
 a46:	3f ef       	ldi	r19, 0xFF	; 255
 a48:	4f e7       	ldi	r20, 0x7F	; 127
 a4a:	57 e4       	ldi	r21, 0x47	; 71
 a4c:	69 a1       	ldd	r22, Y+33	; 0x21
 a4e:	7a a1       	ldd	r23, Y+34	; 0x22
 a50:	8b a1       	ldd	r24, Y+35	; 0x23
 a52:	9c a1       	ldd	r25, Y+36	; 0x24
 a54:	2a d1       	rcall	.+596    	; 0xcaa <__gesf2>
 a56:	18 16       	cp	r1, r24
 a58:	3c f5       	brge	.+78     	; 0xaa8 <main+0x2e2>
 a5a:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
 a5c:	30 e0       	ldi	r19, 0x00	; 0
 a5e:	40 e2       	ldi	r20, 0x20	; 32
 a60:	51 e4       	ldi	r21, 0x41	; 65
 a62:	6d 8d       	ldd	r22, Y+29	; 0x1d
 a64:	7e 8d       	ldd	r23, Y+30	; 0x1e
 a66:	8f 8d       	ldd	r24, Y+31	; 0x1f
 a68:	98 a1       	ldd	r25, Y+32	; 0x20
 a6a:	23 d1       	rcall	.+582    	; 0xcb2 <__mulsf3>
 a6c:	dc 01       	movw	r26, r24
 a6e:	cb 01       	movw	r24, r22
 a70:	bc 01       	movw	r22, r24
 a72:	cd 01       	movw	r24, r26
		__ticks = 1;
 a74:	a1 d0       	rcall	.+322    	; 0xbb8 <__fixunssfsi>
 a76:	dc 01       	movw	r26, r24
 a78:	cb 01       	movw	r24, r22
 a7a:	9e a3       	std	Y+38, r25	; 0x26
 a7c:	8d a3       	std	Y+37, r24	; 0x25
	else if (__tmp > 65535)
 a7e:	0f c0       	rjmp	.+30     	; 0xa9e <main+0x2d8>
 a80:	80 e9       	ldi	r24, 0x90	; 144
 a82:	91 e0       	ldi	r25, 0x01	; 1
 a84:	98 a7       	std	Y+40, r25	; 0x28
 a86:	8f a3       	std	Y+39, r24	; 0x27
 a88:	8f a1       	ldd	r24, Y+39	; 0x27
 a8a:	98 a5       	ldd	r25, Y+40	; 0x28
 a8c:	01 97       	sbiw	r24, 0x01	; 1
 a8e:	f1 f7       	brne	.-4      	; 0xa8c <main+0x2c6>
 a90:	98 a7       	std	Y+40, r25	; 0x28
 a92:	8f a3       	std	Y+39, r24	; 0x27
 a94:	8d a1       	ldd	r24, Y+37	; 0x25
 a96:	9e a1       	ldd	r25, Y+38	; 0x26
 a98:	01 97       	sbiw	r24, 0x01	; 1
 a9a:	9e a3       	std	Y+38, r25	; 0x26
 a9c:	8d a3       	std	Y+37, r24	; 0x25
 a9e:	8d a1       	ldd	r24, Y+37	; 0x25
 aa0:	9e a1       	ldd	r25, Y+38	; 0x26
 aa2:	00 97       	sbiw	r24, 0x00	; 0
 aa4:	69 f7       	brne	.-38     	; 0xa80 <main+0x2ba>
 aa6:	98 cf       	rjmp	.-208    	; 0x9d8 <main+0x212>
 aa8:	69 a1       	ldd	r22, Y+33	; 0x21
 aaa:	7a a1       	ldd	r23, Y+34	; 0x22
 aac:	8b a1       	ldd	r24, Y+35	; 0x23
 aae:	9c a1       	ldd	r25, Y+36	; 0x24
 ab0:	83 d0       	rcall	.+262    	; 0xbb8 <__fixunssfsi>
 ab2:	dc 01       	movw	r26, r24
 ab4:	cb 01       	movw	r24, r22
 ab6:	9e a3       	std	Y+38, r25	; 0x26
 ab8:	8d a3       	std	Y+37, r24	; 0x25
 aba:	8d a1       	ldd	r24, Y+37	; 0x25
 abc:	9e a1       	ldd	r25, Y+38	; 0x26
 abe:	9a a7       	std	Y+42, r25	; 0x2a
 ac0:	89 a7       	std	Y+41, r24	; 0x29
 ac2:	89 a5       	ldd	r24, Y+41	; 0x29
 ac4:	9a a5       	ldd	r25, Y+42	; 0x2a
 ac6:	01 97       	sbiw	r24, 0x01	; 1
 ac8:	f1 f7       	brne	.-4      	; 0xac6 <main+0x300>
 aca:	9a a7       	std	Y+42, r25	; 0x2a
 acc:	89 a7       	std	Y+41, r24	; 0x29
 ace:	84 cf       	rjmp	.-248    	; 0x9d8 <main+0x212>

00000ad0 <_Z41__static_initialization_and_destruction_0ii>:
		led13.toggle();
		_delay_ms(1000);
	}

}
 ad0:	cf 93       	push	r28
 ad2:	df 93       	push	r29
 ad4:	00 d0       	rcall	.+0      	; 0xad6 <_Z41__static_initialization_and_destruction_0ii+0x6>
 ad6:	1f 92       	push	r1
 ad8:	cd b7       	in	r28, 0x3d	; 61
 ada:	de b7       	in	r29, 0x3e	; 62
 adc:	9a 83       	std	Y+2, r25	; 0x02
 ade:	89 83       	std	Y+1, r24	; 0x01
 ae0:	7c 83       	std	Y+4, r23	; 0x04
 ae2:	6b 83       	std	Y+3, r22	; 0x03
 ae4:	89 81       	ldd	r24, Y+1	; 0x01
 ae6:	9a 81       	ldd	r25, Y+2	; 0x02
 ae8:	81 30       	cpi	r24, 0x01	; 1
 aea:	91 05       	cpc	r25, r1
 aec:	f9 f4       	brne	.+62     	; 0xb2c <_Z41__static_initialization_and_destruction_0ii+0x5c>
 aee:	8b 81       	ldd	r24, Y+3	; 0x03
 af0:	9c 81       	ldd	r25, Y+4	; 0x04
 af2:	8f 3f       	cpi	r24, 0xFF	; 255
 af4:	2f ef       	ldi	r18, 0xFF	; 255
 af6:	92 07       	cpc	r25, r18
 af8:	c9 f4       	brne	.+50     	; 0xb2c <_Z41__static_initialization_and_destruction_0ii+0x5c>
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 afa:	41 e0       	ldi	r20, 0x01	; 1
 afc:	60 e0       	ldi	r22, 0x00	; 0
 afe:	80 e0       	ldi	r24, 0x00	; 0
 b00:	92 e0       	ldi	r25, 0x02	; 2
 b02:	3e db       	rcall	.-2436   	; 0x180 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 b04:	41 e0       	ldi	r20, 0x01	; 1
GPIO led1(1, GPIO::OUTPUT);		//PE1
 b06:	61 e0       	ldi	r22, 0x01	; 1
 b08:	82 e0       	ldi	r24, 0x02	; 2
 b0a:	92 e0       	ldi	r25, 0x02	; 2
 b0c:	39 db       	rcall	.-2446   	; 0x180 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 b0e:	41 e0       	ldi	r20, 0x01	; 1
 b10:	6d e0       	ldi	r22, 0x0D	; 13

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 b12:	84 e0       	ldi	r24, 0x04	; 4
 b14:	92 e0       	ldi	r25, 0x02	; 2
 b16:	34 db       	rcall	.-2456   	; 0x180 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 b18:	41 e0       	ldi	r20, 0x01	; 1
 b1a:	64 e0       	ldi	r22, 0x04	; 4
 b1c:	86 e0       	ldi	r24, 0x06	; 6

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 b1e:	92 e0       	ldi	r25, 0x02	; 2
 b20:	2f db       	rcall	.-2466   	; 0x180 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 b22:	41 e0       	ldi	r20, 0x01	; 1
 b24:	66 e0       	ldi	r22, 0x06	; 6
 b26:	88 e0       	ldi	r24, 0x08	; 8
 b28:	92 e0       	ldi	r25, 0x02	; 2
GPIO led6(6, GPIO::OUTPUT);		//PH0
 b2a:	2a db       	rcall	.-2476   	; 0x180 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 b2c:	89 81       	ldd	r24, Y+1	; 0x01
 b2e:	9a 81       	ldd	r25, Y+2	; 0x02
 b30:	00 97       	sbiw	r24, 0x00	; 0
 b32:	a9 f4       	brne	.+42     	; 0xb5e <_Z41__static_initialization_and_destruction_0ii+0x8e>
 b34:	8b 81       	ldd	r24, Y+3	; 0x03
 b36:	9c 81       	ldd	r25, Y+4	; 0x04
 b38:	8f 3f       	cpi	r24, 0xFF	; 255
 b3a:	2f ef       	ldi	r18, 0xFF	; 255
 b3c:	92 07       	cpc	r25, r18
 b3e:	79 f4       	brne	.+30     	; 0xb5e <_Z41__static_initialization_and_destruction_0ii+0x8e>
 b40:	88 e0       	ldi	r24, 0x08	; 8
 b42:	92 e0       	ldi	r25, 0x02	; 2
 b44:	b3 dc       	rcall	.-1690   	; 0x4ac <_ZN4GPIOD1Ev>
 b46:	86 e0       	ldi	r24, 0x06	; 6
 b48:	92 e0       	ldi	r25, 0x02	; 2
 b4a:	b0 dc       	rcall	.-1696   	; 0x4ac <_ZN4GPIOD1Ev>
 b4c:	84 e0       	ldi	r24, 0x04	; 4
 b4e:	92 e0       	ldi	r25, 0x02	; 2
 b50:	ad dc       	rcall	.-1702   	; 0x4ac <_ZN4GPIOD1Ev>

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 b52:	82 e0       	ldi	r24, 0x02	; 2
 b54:	92 e0       	ldi	r25, 0x02	; 2
 b56:	aa dc       	rcall	.-1708   	; 0x4ac <_ZN4GPIOD1Ev>
 b58:	80 e0       	ldi	r24, 0x00	; 0
//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 b5a:	92 e0       	ldi	r25, 0x02	; 2
 b5c:	a7 dc       	rcall	.-1714   	; 0x4ac <_ZN4GPIOD1Ev>
 b5e:	0f 90       	pop	r0
 b60:	0f 90       	pop	r0
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1
 b62:	0f 90       	pop	r0
 b64:	0f 90       	pop	r0
 b66:	df 91       	pop	r29
 b68:	cf 91       	pop	r28
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 b6a:	08 95       	ret

00000b6c <_GLOBAL__sub_I_led0>:
		led4.toggle();
		led13.toggle();
		_delay_ms(1000);
	}

}
 b6c:	cf 93       	push	r28
 b6e:	df 93       	push	r29
 b70:	cd b7       	in	r28, 0x3d	; 61
 b72:	de b7       	in	r29, 0x3e	; 62
 b74:	6f ef       	ldi	r22, 0xFF	; 255
 b76:	7f ef       	ldi	r23, 0xFF	; 255
 b78:	81 e0       	ldi	r24, 0x01	; 1
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	a9 df       	rcall	.-174    	; 0xad0 <_Z41__static_initialization_and_destruction_0ii>
 b7e:	df 91       	pop	r29
 b80:	cf 91       	pop	r28
 b82:	08 95       	ret

00000b84 <_GLOBAL__sub_D_led0>:
 b84:	cf 93       	push	r28
 b86:	df 93       	push	r29
 b88:	cd b7       	in	r28, 0x3d	; 61
 b8a:	de b7       	in	r29, 0x3e	; 62
 b8c:	6f ef       	ldi	r22, 0xFF	; 255
 b8e:	7f ef       	ldi	r23, 0xFF	; 255
 b90:	80 e0       	ldi	r24, 0x00	; 0
 b92:	90 e0       	ldi	r25, 0x00	; 0
 b94:	9d df       	rcall	.-198    	; 0xad0 <_Z41__static_initialization_and_destruction_0ii>
 b96:	df 91       	pop	r29
 b98:	cf 91       	pop	r28
 b9a:	08 95       	ret

00000b9c <__tablejump2__>:
 b9c:	ee 0f       	add	r30, r30
 b9e:	ff 1f       	adc	r31, r31

00000ba0 <__tablejump__>:
 ba0:	05 90       	lpm	r0, Z+
 ba2:	f4 91       	lpm	r31, Z
 ba4:	e0 2d       	mov	r30, r0
 ba6:	19 94       	eijmp

00000ba8 <__tablejump_elpm__>:
 ba8:	07 90       	elpm	r0, Z+
 baa:	f6 91       	elpm	r31, Z
 bac:	e0 2d       	mov	r30, r0
 bae:	19 94       	eijmp

00000bb0 <__cmpsf2>:
 bb0:	2f d0       	rcall	.+94     	; 0xc10 <__fp_cmp>
 bb2:	08 f4       	brcc	.+2      	; 0xbb6 <__cmpsf2+0x6>
 bb4:	81 e0       	ldi	r24, 0x01	; 1
 bb6:	08 95       	ret

00000bb8 <__fixunssfsi>:
 bb8:	57 d0       	rcall	.+174    	; 0xc68 <__fp_splitA>
 bba:	88 f0       	brcs	.+34     	; 0xbde <__fixunssfsi+0x26>
 bbc:	9f 57       	subi	r25, 0x7F	; 127
 bbe:	90 f0       	brcs	.+36     	; 0xbe4 <__fixunssfsi+0x2c>
 bc0:	b9 2f       	mov	r27, r25
 bc2:	99 27       	eor	r25, r25
 bc4:	b7 51       	subi	r27, 0x17	; 23
 bc6:	a0 f0       	brcs	.+40     	; 0xbf0 <__fixunssfsi+0x38>
 bc8:	d1 f0       	breq	.+52     	; 0xbfe <__fixunssfsi+0x46>
 bca:	66 0f       	add	r22, r22
 bcc:	77 1f       	adc	r23, r23
 bce:	88 1f       	adc	r24, r24
 bd0:	99 1f       	adc	r25, r25
 bd2:	1a f0       	brmi	.+6      	; 0xbda <__fixunssfsi+0x22>
 bd4:	ba 95       	dec	r27
 bd6:	c9 f7       	brne	.-14     	; 0xbca <__fixunssfsi+0x12>
 bd8:	12 c0       	rjmp	.+36     	; 0xbfe <__fixunssfsi+0x46>
 bda:	b1 30       	cpi	r27, 0x01	; 1
 bdc:	81 f0       	breq	.+32     	; 0xbfe <__fixunssfsi+0x46>
 bde:	5e d0       	rcall	.+188    	; 0xc9c <__fp_zero>
 be0:	b1 e0       	ldi	r27, 0x01	; 1
 be2:	08 95       	ret
 be4:	5b c0       	rjmp	.+182    	; 0xc9c <__fp_zero>
 be6:	67 2f       	mov	r22, r23
 be8:	78 2f       	mov	r23, r24
 bea:	88 27       	eor	r24, r24
 bec:	b8 5f       	subi	r27, 0xF8	; 248
 bee:	39 f0       	breq	.+14     	; 0xbfe <__fixunssfsi+0x46>
 bf0:	b9 3f       	cpi	r27, 0xF9	; 249
 bf2:	cc f3       	brlt	.-14     	; 0xbe6 <__fixunssfsi+0x2e>
 bf4:	86 95       	lsr	r24
 bf6:	77 95       	ror	r23
 bf8:	67 95       	ror	r22
 bfa:	b3 95       	inc	r27
 bfc:	d9 f7       	brne	.-10     	; 0xbf4 <__fixunssfsi+0x3c>
 bfe:	3e f4       	brtc	.+14     	; 0xc0e <__fixunssfsi+0x56>
 c00:	90 95       	com	r25
 c02:	80 95       	com	r24
 c04:	70 95       	com	r23
 c06:	61 95       	neg	r22
 c08:	7f 4f       	sbci	r23, 0xFF	; 255
 c0a:	8f 4f       	sbci	r24, 0xFF	; 255
 c0c:	9f 4f       	sbci	r25, 0xFF	; 255
 c0e:	08 95       	ret

00000c10 <__fp_cmp>:
 c10:	99 0f       	add	r25, r25
 c12:	00 08       	sbc	r0, r0
 c14:	55 0f       	add	r21, r21
 c16:	aa 0b       	sbc	r26, r26
 c18:	e0 e8       	ldi	r30, 0x80	; 128
 c1a:	fe ef       	ldi	r31, 0xFE	; 254
 c1c:	16 16       	cp	r1, r22
 c1e:	17 06       	cpc	r1, r23
 c20:	e8 07       	cpc	r30, r24
 c22:	f9 07       	cpc	r31, r25
 c24:	c0 f0       	brcs	.+48     	; 0xc56 <__fp_cmp+0x46>
 c26:	12 16       	cp	r1, r18
 c28:	13 06       	cpc	r1, r19
 c2a:	e4 07       	cpc	r30, r20
 c2c:	f5 07       	cpc	r31, r21
 c2e:	98 f0       	brcs	.+38     	; 0xc56 <__fp_cmp+0x46>
 c30:	62 1b       	sub	r22, r18
 c32:	73 0b       	sbc	r23, r19
 c34:	84 0b       	sbc	r24, r20
 c36:	95 0b       	sbc	r25, r21
 c38:	39 f4       	brne	.+14     	; 0xc48 <__fp_cmp+0x38>
 c3a:	0a 26       	eor	r0, r26
 c3c:	61 f0       	breq	.+24     	; 0xc56 <__fp_cmp+0x46>
 c3e:	23 2b       	or	r18, r19
 c40:	24 2b       	or	r18, r20
 c42:	25 2b       	or	r18, r21
 c44:	21 f4       	brne	.+8      	; 0xc4e <__fp_cmp+0x3e>
 c46:	08 95       	ret
 c48:	0a 26       	eor	r0, r26
 c4a:	09 f4       	brne	.+2      	; 0xc4e <__fp_cmp+0x3e>
 c4c:	a1 40       	sbci	r26, 0x01	; 1
 c4e:	a6 95       	lsr	r26
 c50:	8f ef       	ldi	r24, 0xFF	; 255
 c52:	81 1d       	adc	r24, r1
 c54:	81 1d       	adc	r24, r1
 c56:	08 95       	ret

00000c58 <__fp_split3>:
 c58:	57 fd       	sbrc	r21, 7
 c5a:	90 58       	subi	r25, 0x80	; 128
 c5c:	44 0f       	add	r20, r20
 c5e:	55 1f       	adc	r21, r21
 c60:	59 f0       	breq	.+22     	; 0xc78 <__fp_splitA+0x10>
 c62:	5f 3f       	cpi	r21, 0xFF	; 255
 c64:	71 f0       	breq	.+28     	; 0xc82 <__fp_splitA+0x1a>
 c66:	47 95       	ror	r20

00000c68 <__fp_splitA>:
 c68:	88 0f       	add	r24, r24
 c6a:	97 fb       	bst	r25, 7
 c6c:	99 1f       	adc	r25, r25
 c6e:	61 f0       	breq	.+24     	; 0xc88 <__fp_splitA+0x20>
 c70:	9f 3f       	cpi	r25, 0xFF	; 255
 c72:	79 f0       	breq	.+30     	; 0xc92 <__fp_splitA+0x2a>
 c74:	87 95       	ror	r24
 c76:	08 95       	ret
 c78:	12 16       	cp	r1, r18
 c7a:	13 06       	cpc	r1, r19
 c7c:	14 06       	cpc	r1, r20
 c7e:	55 1f       	adc	r21, r21
 c80:	f2 cf       	rjmp	.-28     	; 0xc66 <__fp_split3+0xe>
 c82:	46 95       	lsr	r20
 c84:	f1 df       	rcall	.-30     	; 0xc68 <__fp_splitA>
 c86:	08 c0       	rjmp	.+16     	; 0xc98 <__fp_splitA+0x30>
 c88:	16 16       	cp	r1, r22
 c8a:	17 06       	cpc	r1, r23
 c8c:	18 06       	cpc	r1, r24
 c8e:	99 1f       	adc	r25, r25
 c90:	f1 cf       	rjmp	.-30     	; 0xc74 <__fp_splitA+0xc>
 c92:	86 95       	lsr	r24
 c94:	71 05       	cpc	r23, r1
 c96:	61 05       	cpc	r22, r1
 c98:	08 94       	sec
 c9a:	08 95       	ret

00000c9c <__fp_zero>:
 c9c:	e8 94       	clt

00000c9e <__fp_szero>:
 c9e:	bb 27       	eor	r27, r27
 ca0:	66 27       	eor	r22, r22
 ca2:	77 27       	eor	r23, r23
 ca4:	cb 01       	movw	r24, r22
 ca6:	97 f9       	bld	r25, 7
 ca8:	08 95       	ret

00000caa <__gesf2>:
 caa:	b2 df       	rcall	.-156    	; 0xc10 <__fp_cmp>
 cac:	08 f4       	brcc	.+2      	; 0xcb0 <__gesf2+0x6>
 cae:	8f ef       	ldi	r24, 0xFF	; 255
 cb0:	08 95       	ret

00000cb2 <__mulsf3>:
 cb2:	0b d0       	rcall	.+22     	; 0xcca <__mulsf3x>
 cb4:	78 c0       	rjmp	.+240    	; 0xda6 <__fp_round>
 cb6:	69 d0       	rcall	.+210    	; 0xd8a <__fp_pscA>
 cb8:	28 f0       	brcs	.+10     	; 0xcc4 <__mulsf3+0x12>
 cba:	6e d0       	rcall	.+220    	; 0xd98 <__fp_pscB>
 cbc:	18 f0       	brcs	.+6      	; 0xcc4 <__mulsf3+0x12>
 cbe:	95 23       	and	r25, r21
 cc0:	09 f0       	breq	.+2      	; 0xcc4 <__mulsf3+0x12>
 cc2:	5a c0       	rjmp	.+180    	; 0xd78 <__fp_inf>
 cc4:	5f c0       	rjmp	.+190    	; 0xd84 <__fp_nan>
 cc6:	11 24       	eor	r1, r1
 cc8:	ea cf       	rjmp	.-44     	; 0xc9e <__fp_szero>

00000cca <__mulsf3x>:
 cca:	c6 df       	rcall	.-116    	; 0xc58 <__fp_split3>
 ccc:	a0 f3       	brcs	.-24     	; 0xcb6 <__mulsf3+0x4>

00000cce <__mulsf3_pse>:
 cce:	95 9f       	mul	r25, r21
 cd0:	d1 f3       	breq	.-12     	; 0xcc6 <__mulsf3+0x14>
 cd2:	95 0f       	add	r25, r21
 cd4:	50 e0       	ldi	r21, 0x00	; 0
 cd6:	55 1f       	adc	r21, r21
 cd8:	62 9f       	mul	r22, r18
 cda:	f0 01       	movw	r30, r0
 cdc:	72 9f       	mul	r23, r18
 cde:	bb 27       	eor	r27, r27
 ce0:	f0 0d       	add	r31, r0
 ce2:	b1 1d       	adc	r27, r1
 ce4:	63 9f       	mul	r22, r19
 ce6:	aa 27       	eor	r26, r26
 ce8:	f0 0d       	add	r31, r0
 cea:	b1 1d       	adc	r27, r1
 cec:	aa 1f       	adc	r26, r26
 cee:	64 9f       	mul	r22, r20
 cf0:	66 27       	eor	r22, r22
 cf2:	b0 0d       	add	r27, r0
 cf4:	a1 1d       	adc	r26, r1
 cf6:	66 1f       	adc	r22, r22
 cf8:	82 9f       	mul	r24, r18
 cfa:	22 27       	eor	r18, r18
 cfc:	b0 0d       	add	r27, r0
 cfe:	a1 1d       	adc	r26, r1
 d00:	62 1f       	adc	r22, r18
 d02:	73 9f       	mul	r23, r19
 d04:	b0 0d       	add	r27, r0
 d06:	a1 1d       	adc	r26, r1
 d08:	62 1f       	adc	r22, r18
 d0a:	83 9f       	mul	r24, r19
 d0c:	a0 0d       	add	r26, r0
 d0e:	61 1d       	adc	r22, r1
 d10:	22 1f       	adc	r18, r18
 d12:	74 9f       	mul	r23, r20
 d14:	33 27       	eor	r19, r19
 d16:	a0 0d       	add	r26, r0
 d18:	61 1d       	adc	r22, r1
 d1a:	23 1f       	adc	r18, r19
 d1c:	84 9f       	mul	r24, r20
 d1e:	60 0d       	add	r22, r0
 d20:	21 1d       	adc	r18, r1
 d22:	82 2f       	mov	r24, r18
 d24:	76 2f       	mov	r23, r22
 d26:	6a 2f       	mov	r22, r26
 d28:	11 24       	eor	r1, r1
 d2a:	9f 57       	subi	r25, 0x7F	; 127
 d2c:	50 40       	sbci	r21, 0x00	; 0
 d2e:	8a f0       	brmi	.+34     	; 0xd52 <__mulsf3_pse+0x84>
 d30:	e1 f0       	breq	.+56     	; 0xd6a <__mulsf3_pse+0x9c>
 d32:	88 23       	and	r24, r24
 d34:	4a f0       	brmi	.+18     	; 0xd48 <__mulsf3_pse+0x7a>
 d36:	ee 0f       	add	r30, r30
 d38:	ff 1f       	adc	r31, r31
 d3a:	bb 1f       	adc	r27, r27
 d3c:	66 1f       	adc	r22, r22
 d3e:	77 1f       	adc	r23, r23
 d40:	88 1f       	adc	r24, r24
 d42:	91 50       	subi	r25, 0x01	; 1
 d44:	50 40       	sbci	r21, 0x00	; 0
 d46:	a9 f7       	brne	.-22     	; 0xd32 <__mulsf3_pse+0x64>
 d48:	9e 3f       	cpi	r25, 0xFE	; 254
 d4a:	51 05       	cpc	r21, r1
 d4c:	70 f0       	brcs	.+28     	; 0xd6a <__mulsf3_pse+0x9c>
 d4e:	14 c0       	rjmp	.+40     	; 0xd78 <__fp_inf>
 d50:	a6 cf       	rjmp	.-180    	; 0xc9e <__fp_szero>
 d52:	5f 3f       	cpi	r21, 0xFF	; 255
 d54:	ec f3       	brlt	.-6      	; 0xd50 <__mulsf3_pse+0x82>
 d56:	98 3e       	cpi	r25, 0xE8	; 232
 d58:	dc f3       	brlt	.-10     	; 0xd50 <__mulsf3_pse+0x82>
 d5a:	86 95       	lsr	r24
 d5c:	77 95       	ror	r23
 d5e:	67 95       	ror	r22
 d60:	b7 95       	ror	r27
 d62:	f7 95       	ror	r31
 d64:	e7 95       	ror	r30
 d66:	9f 5f       	subi	r25, 0xFF	; 255
 d68:	c1 f7       	brne	.-16     	; 0xd5a <__mulsf3_pse+0x8c>
 d6a:	fe 2b       	or	r31, r30
 d6c:	88 0f       	add	r24, r24
 d6e:	91 1d       	adc	r25, r1
 d70:	96 95       	lsr	r25
 d72:	87 95       	ror	r24
 d74:	97 f9       	bld	r25, 7
 d76:	08 95       	ret

00000d78 <__fp_inf>:
 d78:	97 f9       	bld	r25, 7
 d7a:	9f 67       	ori	r25, 0x7F	; 127
 d7c:	80 e8       	ldi	r24, 0x80	; 128
 d7e:	70 e0       	ldi	r23, 0x00	; 0
 d80:	60 e0       	ldi	r22, 0x00	; 0
 d82:	08 95       	ret

00000d84 <__fp_nan>:
 d84:	9f ef       	ldi	r25, 0xFF	; 255
 d86:	80 ec       	ldi	r24, 0xC0	; 192
 d88:	08 95       	ret

00000d8a <__fp_pscA>:
 d8a:	00 24       	eor	r0, r0
 d8c:	0a 94       	dec	r0
 d8e:	16 16       	cp	r1, r22
 d90:	17 06       	cpc	r1, r23
 d92:	18 06       	cpc	r1, r24
 d94:	09 06       	cpc	r0, r25
 d96:	08 95       	ret

00000d98 <__fp_pscB>:
 d98:	00 24       	eor	r0, r0
 d9a:	0a 94       	dec	r0
 d9c:	12 16       	cp	r1, r18
 d9e:	13 06       	cpc	r1, r19
 da0:	14 06       	cpc	r1, r20
 da2:	05 06       	cpc	r0, r21
 da4:	08 95       	ret

00000da6 <__fp_round>:
 da6:	09 2e       	mov	r0, r25
 da8:	03 94       	inc	r0
 daa:	00 0c       	add	r0, r0
 dac:	11 f4       	brne	.+4      	; 0xdb2 <__fp_round+0xc>
 dae:	88 23       	and	r24, r24
 db0:	52 f0       	brmi	.+20     	; 0xdc6 <__fp_round+0x20>
 db2:	bb 0f       	add	r27, r27
 db4:	40 f4       	brcc	.+16     	; 0xdc6 <__fp_round+0x20>
 db6:	bf 2b       	or	r27, r31
 db8:	11 f4       	brne	.+4      	; 0xdbe <__fp_round+0x18>
 dba:	60 ff       	sbrs	r22, 0
 dbc:	04 c0       	rjmp	.+8      	; 0xdc6 <__fp_round+0x20>
 dbe:	6f 5f       	subi	r22, 0xFF	; 255
 dc0:	7f 4f       	sbci	r23, 0xFF	; 255
 dc2:	8f 4f       	sbci	r24, 0xFF	; 255
 dc4:	9f 4f       	sbci	r25, 0xFF	; 255
 dc6:	08 95       	ret

00000dc8 <__do_global_dtors>:
 dc8:	11 e0       	ldi	r17, 0x01	; 1
 dca:	ca e3       	ldi	r28, 0x3A	; 58
 dcc:	d1 e0       	ldi	r29, 0x01	; 1
 dce:	00 e0       	ldi	r16, 0x00	; 0
 dd0:	05 c0       	rjmp	.+10     	; 0xddc <__do_global_dtors+0x14>
 dd2:	22 97       	sbiw	r28, 0x02	; 2
 dd4:	01 09       	sbc	r16, r1
 dd6:	fe 01       	movw	r30, r28
 dd8:	0b bf       	out	0x3b, r16	; 59
 dda:	e6 de       	rcall	.-564    	; 0xba8 <__tablejump_elpm__>
 ddc:	cc 33       	cpi	r28, 0x3C	; 60
 dde:	d1 07       	cpc	r29, r17
 de0:	80 e0       	ldi	r24, 0x00	; 0
 de2:	08 07       	cpc	r16, r24
 de4:	b1 f7       	brne	.-20     	; 0xdd2 <__do_global_dtors+0xa>
 de6:	f8 94       	cli

00000de8 <__stop_program>:
 de8:	ff cf       	rjmp	.-2      	; 0xde8 <__stop_program>
